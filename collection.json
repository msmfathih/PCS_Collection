{
	"info": {
		"_postman_id": "0ad98840-4b16-466d-83b7-66391321c021",
		"name": "PCS-Iraq",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PCS_Appointment",
			"item": [
				{
					"name": "Trucks",
					"item": [
						{
							"name": "2_Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// //To read Json\r",
											"const jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"//Set token as an environmental variable\r",
											"const token_new = jsonData.data.token;\r",
											"\r",
											"// pm.environment.set(\"token\", token);\r",
											"// pm.collectionVariables.set(\"token_new\", token_new);\r",
											"postman.setEnvironmentVariable(\"token2\",token_new);\r",
											"console.log(token_new);\r",
											"\r",
											"pm.test(\"verify Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImp0aSI6WyJjNWJiNTA4Mi0zMjgxLTQ1MWUtYWVkZS1lNmI4ZDE3ODdkNGQiLCI4NWExM2E0NC0wMWVkLTQ5OTctYWYyNC1mNzljOGI2OGU2MDEiXSwiVVNFUkdST1VQIjoiQ2xlcmsiLCJGVUxMTkFNRSI6IlRlc3R1c2VyIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6InRlc3R1c2VyIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9leHBpcmVkIjoiNS85LzIwMjIgMToyNjozNyBQTSIsIk9SR0FOSVpBVElPTlVOSVRTIjoiIiwiT1JHQU5JWkFUSU9OUyI6IiIsIkVNQUlMIjoidGVzdHVzZXJAbWFxdGEuYWUiLCJleHAiOjE2NTIwODgzOTcsImlzcyI6Ik1SLklkZW50aXR5LkFQSSIsImF1ZCI6Ik1SLlNlcnZpY2VzIn0.4AaAlA5MpXABsS8S5cC9BS8Gh0Bp2k1zuzVz5715dTA",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n  \"username\": \"testuser\",\r\n  \"password\": \"P@ssw0rd\"\r\n\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{tokenURL}}/IdentityManagementAPI/API/login",
									"host": [
										"{{tokenURL}}"
									],
									"path": [
										"IdentityManagementAPI",
										"API",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Truck",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"truckNumber\": \"816567\",\r\n    \"truckType\": \"Flat bed\",\r\n    \"rfidNumber\": \"5459\",\r\n    \"state\": null,\r\n    \"stateCode\": null,\r\n    \"country\": null,\r\n    \"terminalCode\":null,\r\n    \"companyId\": \"00000000-0000-0000-0000-000000000000\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Trucks",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Trucks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Truck",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ID\": \"8C3FD8E2-A83D-4451-949E-DC3BE426289E\",\r\n  \"TruckNumber\": \"54943-01\",\r\n  \"RFIDNumber\": \"111-002\",\r\n  \"State\": \"AU\",\r\n  \"truckType\": \"Flat bed\",\r\n  \"StateCode\": \"AUH\",\r\n  \"Country\": \"UAE\",\r\n  \"TerminalCode\": \"KT\",\r\n  \"CompanyId\": \"BFB99C1B-F9B1-4DF5-9C1D-09BC3DAF31DD\"\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Trucks/1586DCE2-044F-4168-B642-DFE0280F9901",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Trucks",
										"1586DCE2-044F-4168-B642-DFE0280F9901"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Trucks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response_code = 200\r",
											"var response_time = 5000\r",
											"\r",
											"var commonTest=()=>{\r",
											"\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"}\r",
											"commonTest();\r",
											"\r",
											"pm.test(\"Object is contained\", () => {\r",
											"  const expectedObject = {\r",
											"    \"success\": true,\r",
											"    \"msg\": null,\r",
											"    \"errorlst\": null\r",
											"\r",
											"  };\r",
											"  pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Trucks",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Trucks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Truck",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/trucks/1244c493-5011-4185-a890-ff861d1698e4",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"trucks",
										"1244c493-5011-4185-a890-ff861d1698e4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Truck By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"//    postman.skipRequest;\r",
											"// }\r",
											"\r",
											"var response_code = 200\r",
											"var response_time = 5000\r",
											"\r",
											"var commonTest=()=>{\r",
											"\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"}\r",
											"\r",
											"commonTest();\r",
											"\r",
											"pm.test(\"Object is contained\", () => {\r",
											"  const expectedObject = {\r",
											"    \"success\": true,\r",
											"    \"msg\": null,\r",
											"    \"errorlst\": null\r",
											"\r",
											"  };\r",
											"  pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Trucks/9D408D71-702E-4EA7-8342-40A4834D64F2",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Trucks",
										"9D408D71-702E-4EA7-8342-40A4834D64F2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Drivers",
					"item": [
						{
							"name": "Create Driver",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Malik\",\r\n  \"Email\": \"test34@.com\",\r\n  \"ContactNumber\": \"009715243114\",\r\n  \"IDType\":\"Passport\",\r\n  \"IDNo\": \"12345678\",\r\n  \"IDExpiryDate\": \"2022-12-31\",\r\n  \"IDStatus\": \"active\",\r\n  \"DOB\": \"1984-06-10\",\r\n  \"JobTitle\": \"Truck Driver\",\r\n  \"StartDate\": \"2021-02-10\",\r\n  \"Gender\": \"Male\",\r\n  \"Address1\": \"Abu dhabi\",\r\n  \"Department\":\"Driver\",\r\n  \"CompanyId\": \"EA218288-E010-4F94-B2D6-309DBCB38B34\",\r\n  \"Nationality\":\"Pakistani\",\r\n  \"IsActive\":true\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Driver",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Driver"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Driver",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ID\": \"50E18AB0-AD57-45C3-A8B6-5B8A401F3DF4\",\r\n  \"Name\": \"Akram001\",\r\n  \"Email\": \"akram001@test.com\",\r\n  \"ContactNumber\": \"00971522343114\",\r\n  \"IDNo\": \"12345678\",\r\n  \"IDExpiryDate\": \"2022-12-31\",\r\n  \"IDStatus\": \"active\",\r\n  \"DOB\": \"1984-06-10\",\r\n  \"JobTitle\": \"Truck Driver\",\r\n  \"StartDate\": \"2021-02-10\",\r\n  \"Gender\": \"Male\",\r\n  \"Address1\": \"Abu dhabi\",\r\n  \"CompanyId\": \"EA218288-E010-4F94-B2D6-309DBCB38B34\"\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Driver/594ad25e-c109-48fc-92c2-928f625309b1",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Driver",
										"594ad25e-c109-48fc-92c2-928f625309b1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Driver",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											"\r",
											"// var response_code = 200;\r",
											"// var response_time = 5000;\r",
											"// var response = JSON.parse(responseBody);\r",
											"\r",
											"// var sucessResponseTest=()=>{\r",
											"//     pm.test(\"Response should be successful\", function () {\r",
											"//     pm.expect(response.success).to.eql(true);\r",
											"//     pm.expect(response.errorlst).to.be.null;\r",
											"//     pm.expect(response.msg).not.to.be.null;\r",
											"//     });\r",
											"// }\r",
											"\r",
											"// var statusCodeTest=()=>{\r",
											"//         pm.test(\"Verify status code should be 200\", function () {\r",
											"//             pm.response.to.be.not.eql(null);\r",
											"//             pm.response.to.have.status(response_code);\r",
											"//         });\r",
											"// }\r",
											"\r",
											"// var responseTimeTest=()=>{\r",
											"//          pm.test(\"Response time is less than 5000ms\", function () {\r",
											"//         pm.expect(pm.response.responseTime).to.be.below(response_time)});\r",
											"// }\r",
											"\r",
											"// var headerTest=()=>{\r",
											"//    pm.test(\"Response body has header Data\", function () {\r",
											"//    pm.response.to.have.header(\"Date\");\r",
											"//    pm.response.to.have.header(\"Content-Length\");\r",
											"//    pm.response.to.be.header(\"Content-Type\");});\r",
											"// }\r",
											"\r",
											"// headerTest();\r",
											"// statusCodeTest();\r",
											"// responseTimeTest();\r",
											"// sucessResponseTest();\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Driver/50e18ab0-ad57-45c3-a8b6-5b8a401f3df4",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Driver",
										"50e18ab0-ad57-45c3-a8b6-5b8a401f3df4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Drivers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response_code = 200;\r",
											"var response_time = 5000;\r",
											"\r",
											"var response = JSON.parse(responseBody);\r",
											"\r",
											"var sucessResponseTest=()=>{\r",
											"\r",
											"    pm.test(\"Response should be successful\", function () {\r",
											"    pm.expect(response.success).to.eql(true);\r",
											"    pm.expect(response.errorlst).to.be.null;\r",
											"    //pm.expect(response.msg).to.be.null;\r",
											"\r",
											"    });\r",
											"}\r",
											"\r",
											"var statusCodeTest=()=>{\r",
											"\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"\r",
											"            pm.response.to.be.not.eql(null);\r",
											"\r",
											"            pm.response.to.have.status(response_code);\r",
											"\r",
											"        });\r",
											"\r",
											"}\r",
											"\r",
											"var responseTimeTest=()=>{\r",
											"\r",
											"         pm.test(\"Response time is less than 5000ms\", function () {\r",
											"\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time)});\r",
											"\r",
											"}\r",
											"\r",
											"var headerTest=()=>{\r",
											"\r",
											"   pm.test(\"Response body has header Data\", function () {\r",
											"\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"\r",
											"   pm.response.to.be.header(\"Content-Type\");});\r",
											"\r",
											"}\r",
											"\r",
											"headerTest();\r",
											"\r",
											"statusCodeTest();\r",
											"\r",
											"responseTimeTest();\r",
											"\r",
											"sucessResponseTest();\r",
											"\r",
											"//evironmentTest();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Driver/",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Driver",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Truck Company",
					"item": [
						{
							"name": "Create Truck Company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											"\r",
											"\r",
											"// var trucking_company_verify_status=()=>{\r",
											"\r",
											"//     var truck_company_status = \"true\"\r",
											"//     var truck_company_name =\"ABC Truck Company\"\r",
											"//     var truck_company_licenceNumber =\"EPHQ-8167\"\r",
											"//     var truck_company_creation_message = \"Truck Company Created Successfully\"\r",
											"\r",
											"\r",
											"//          pm.test(\"Listing has contains cancel status\",() => {\r",
											"//             pm.expect(pm.response.text()).to.include(truck_company_status);\r",
											"//         });\r",
											"//         pm.test(\"Body has contains trucking company name\",() => {\r",
											"//             pm.expect(pm.response.text()).to.include(truck_company_name);\r",
											"//         });\r",
											"//         pm.test(\"Listing has contains draft status\",() => {\r",
											"//             pm.expect(pm.response.text()).to.include(truck_company_licenceNumber);\r",
											"//         });\r",
											"//             pm.test(\"Listing has contains draft status\",() => {\r",
											"//             pm.expect(pm.response.text()).to.include(truck_company_creation_message);\r",
											"//         });\r",
											"//     }\r",
											"// trucking_company_verify_status()\r",
											"\r",
											"// var schema = {\r",
											"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"//   \"type\": \"object\",\r",
											"//   \"properties\": {\r",
											"//     \"data\": {\r",
											"//       \"type\": \"object\",\r",
											"//       \"properties\": {\r",
											"//         \"id\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"name\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"licenseNumber\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"address\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"poBox\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"contactNumber\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"fax\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"isActive\": {\r",
											"//           \"type\": \"boolean\"\r",
											"//         }\r",
											"//       },\r",
											"//       \"required\": [\r",
											"//         \"id\",\r",
											"//         \"name\",\r",
											"//         \"licenseNumber\",\r",
											"//         \"address\",\r",
											"//         \"poBox\",\r",
											"//         \"contactNumber\",\r",
											"//         \"fax\",\r",
											"//         \"isActive\"\r",
											"//       ]\r",
											"//     },\r",
											"//     \"msg\": {\r",
											"//       \"type\": \"string\"\r",
											"//     },\r",
											"//     \"success\": {\r",
											"//       \"type\": \"boolean\"\r",
											"//     },\r",
											"//     \"errorlst\": {\r",
											"//       \"type\": \"null\"\r",
											"//     }\r",
											"//   },\r",
											"//   \"required\": [\r",
											"//     \"data\",\r",
											"//     \"msg\",\r",
											"//     \"success\",\r",
											"//     \"errorlst\"\r",
											"//   ]\r",
											"// }\r",
											"// var json = pm.response.json()\r",
											"// pm.test('Shipping Line Lookup schema validation', function () {\r",
											"//     pm.expect(tv4.validate(json, schema)).to.be.true;\r",
											"// });\r",
											"\r",
											"// var headerTest=()=>{\r",
											"// pm.test(\"Response body has header Data\", function () {\r",
											"//    pm.response.to.have.header(\"Date\");\r",
											"//    pm.response.to.have.header(\"Content-Length\");\r",
											"//    pm.response.to.be.header(\"Content-Type\");\r",
											"// });\r",
											"// }\r",
											"// headerTest()\r",
											"\r",
											"// var response_code = 200\r",
											"// var response_time = 5000\r",
											"\r",
											"// var commonTest=()=>{\r",
											"\r",
											"//         pm.test(\"Verify status code should be 200\", function () {\r",
											"//             pm.response.to.be.not.eql(null);\r",
											"//             pm.response.to.have.status(response_code);\r",
											"//         });\r",
											"//              pm.test(\"Response time is less than 5000ms\", function () {\r",
											"//         pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"//     });\r",
											"\r",
											"// }\r",
											"// commonTest();\r",
											"\r",
											"// pm.test(\"Response property matches environment variable\", function () {\r",
											"//   pm.expect(pm.response.json().name).to.eql(pm.environment.get(\"name\"));\r",
											"// });\r",
											"\r",
											"// pm.test(\"Object is contained\", () => {\r",
											"//   const expectedObject = {\r",
											"//     \"success\": true,\r",
											"//     \"errorlst\": null,\r",
											"//     \"msg\": \"Truck Company Created Successfully\",\r",
											"   \r",
											"//   };\r",
											"//   pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
											"// });\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"Name\": \"ABC Truck Company\",\r\n\"LicenseNumber\": \"EPHQ3453643s5\",\r\n\"Address\": \"Kinniya\",\r\n\"POBox\": \"123\",\r\n\"ContactNumber\": \"123456\",\r\n\"Fax\": \"654321\",\r\n\"IsActive\": 1\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/Appointment/api/v1/TruckCompany/",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"Appointment",
										"api",
										"v1",
										"TruckCompany",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Truck Company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											"\r",
											"\r",
											"// pm.test(\"Object is contained\", () => {\r",
											"//   const expectedObject = {\r",
											"//     \"success\": true,\r",
											"//     \"errorlst\": null,\r",
											"//     \"msg\": \"Truck Company Updated Successfully\",\r",
											"   \r",
											"//   };\r",
											"//   pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
											"// });\r",
											"\r",
											"// var trucking_company_update_status=()=>{\r",
											"\r",
											"//     var truck_company_status = \"true\"\r",
											"//     var truck_company_name =\"ABC Trucking\"\r",
											"//     var truck_company_licenceNumber =\"LICABC456\"\r",
											"\r",
											"        \r",
											"//         pm.test(\"Listing has contains cancel status\",() => {\r",
											"//             pm.expect(pm.response.text()).to.include(truck_company_status);\r",
											"//         });\r",
											"//         pm.test(\"Body has contains trucking company name\",() => {\r",
											"//             pm.expect(pm.response.text()).to.include(truck_company_name);\r",
											"//         });\r",
											"//         pm.test(\"Listing has contains draft status\",() => {\r",
											"//             pm.expect(pm.response.text()).to.include(truck_company_licenceNumber);\r",
											"//         });\r",
											"\r",
											"//     }\r",
											"// trucking_company_update_status()\r",
											"\r",
											"// var response_code = 200\r",
											"// var response_time = 5000\r",
											"\r",
											"// var commonTest=()=>{\r",
											"\r",
											"//         pm.test(\"Verify status code should be 200\", function () {\r",
											"//             pm.response.to.be.not.eql(null);\r",
											"//             pm.response.to.have.status(response_code);\r",
											"//         });\r",
											"//              pm.test(\"Response time is less than 5000ms\", function () {\r",
											"//         pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"//     });\r",
											"\r",
											"\r",
											"// }\r",
											"// commonTest();\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": " { \"id\": \"e0de36ea-31ae-4b93-a306-6547056b01e7\",\r\n        \"name\": \"ABC Trucking \",\r\n        \"licenseNumber\": \"LICABC456\",\r\n        \"address\": \"Abu Dhabi\",\r\n        \"poBox\": \"75004\",\r\n        \"contactNumber\": \"1234567890\",\r\n        \"fax\": \"0987654321\",\r\n        \"isActive\": true\r\n    }\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/Appointment/api/v1/TruckCompany/e0de36ea-31ae-4b93-a306-6547056b01e7\"",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"Appointment",
										"api",
										"v1",
										"TruckCompany",
										"e0de36ea-31ae-4b93-a306-6547056b01e7\""
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Truck Company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											"\r",
											"// var response_code = 200\r",
											"// var response_time = 5000\r",
											"// var delete_message = \"Truck Company Deleted Successfully\"\r",
											"\r",
											"// var commonTest=()=>{\r",
											"\r",
											"//         pm.test(\"Verify status code should be 200\", function () {\r",
											"//             pm.response.to.be.not.eql(null);\r",
											"//             pm.response.to.have.status(response_code);\r",
											"//         });\r",
											"//              pm.test(\"Response time is less than 5000ms\", function () {\r",
											"//         pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"//     });\r",
											"// }\r",
											"\r",
											"// pm.test(\"Object is contained\", () => {\r",
											"//   const expectedObject = {\r",
											"//     \"success\": true,\r",
											"//     \"msg\": delete_message,\r",
											"//     \"errorlst\": null\r",
											"\r",
											"//   };\r",
											"//   pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
											"// });\r",
											"// commonTest();\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/Appointment/api/v1/TruckCompany/BFB99C1B-F9B1-4DF5-9C1D-09BC3DAF31DD",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"Appointment",
										"api",
										"v1",
										"TruckCompany",
										"BFB99C1B-F9B1-4DF5-9C1D-09BC3DAF31DD"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Appointment Details",
					"item": [
						{
							"name": "Get All Trucks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"headerTest()\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"var response_code = 200\r",
											"var response_time = 5000\r",
											"\r",
											"var commonTest=()=>{\r",
											"    var size=0;\r",
											"    // for (var count in responseBody) {\r",
											"    //     if(responseBody.hasOwnProperty(count))\r",
											"    //         size += 1;\r",
											"    //     } \r",
											"        // console.log(\"BODY SIZE = \" + size);\r",
											"\r",
											"    //     pm.test(\"response size\", function () {\r",
											"    //     pm.expect(pm.response.responseSize).to.be.equal(response_size);\r",
											"    // });\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"\r",
											"\r",
											"}\r",
											"commonTest();\r",
											"\r",
											"pm.test(\"Object is contained\", () => {\r",
											"  const expectedObject = {\r",
											"    \"success\": true,\r",
											"    \"errorlst\": null,\r",
											"    \"errorlst\": null\r",
											"   \r",
											"  };\r",
											"  pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Trucks/",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Trucks",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Drivers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Object is contained\", () => {\r",
											"  const expectedObject = {\r",
											"    \"success\": true,\r",
											"    \"errorlst\": null,\r",
											"    \"errorlst\": null,\r",
											"   \r",
											"  };\r",
											"  pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
											"});\r",
											"\r",
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"headerTest()\r",
											"\r",
											"var response_code = 200\r",
											"var response_time = 2500\r",
											"\r",
											"var commonTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        } \r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"        \r",
											"    //     pm.test(\"response size\", function () {\r",
											"    //     pm.expect(pm.response.responseSize).to.be.equal(response_size);\r",
											"    // });\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"}\r",
											"commonTest();\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Driver",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Driver"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Truck Companies",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"headerTest()\r",
											"\r",
											"var response_size = 418\r",
											"var response_code = 200\r",
											"var response_time = 1000\r",
											"var commonTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        } \r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"        \r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"            pm.test(\"response size\", function () {\r",
											"        pm.expect(pm.response.responseSize).to.be.equal(respose_size);\r",
											"    });\r",
											"}\r",
											"commonTest();\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/TruckCompany",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"TruckCompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Appointment Date&Time",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var schema = {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"timeslots\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"timeslots\"\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})\r",
											"\r",
											"// var respose_size = 616 \r",
											"var response_time = 6000\r",
											"var response_code = 200\r",
											"\r",
											"var commonTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        }\r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"        \r",
											"    //     pm.test(\"response size\", function () {\r",
											"    //     pm.expect(pm.response.responseSize).to.be.equal(respose_size);\r",
											"    // });\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 2000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"        pm.test(\"Response body has header Data\", function () {\r",
											"            pm.response.to.have.header(\"Date\");\r",
											"            pm.response.to.have.header(\"Content-Length\");\r",
											"            pm.response.to.be.header(\"Content-Type\");\r",
											"        });\r",
											"    }\r",
											"\r",
											"commonTest();\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/appointment/time/15-06-2023",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"appointment",
										"time",
										"15-06-2023"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Purpose of Visit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response_code = 200;\r",
											"var response_time = 5000;\r",
											"var response_size = 537;\r",
											"var active_environment = \"New Environment\"\r",
											"\r",
											"\r",
											"var statusCodeTest=()=>{\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"}\r",
											"\r",
											"var responseTimeTest=()=>{\r",
											"        pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time)});\r",
											"}\r",
											"\r",
											"var headerTest=()=>{\r",
											"   pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"   pm.response.to.have.header(\"Content-Type\");});\r",
											"}\r",
											"\r",
											"var responseSizeTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        }\r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"        pm.test(\"response size\", function () {\r",
											"       pm.expect(pm.response.responseSize).to.be.equal(response_size);\r",
											"   });\r",
											"}\r",
											"\r",
											"var Lookup_TypeTest=()=>{\r",
											"    pm.test(\"Verify lookup type is Purpose of Visit \", function () {\r",
											"    var responseDetails = JSON.parse(responseBody);\r",
											"    var lookupType_Value = responseDetails.items[0].lookup_Type\r",
											"    pm.expect(lookupType_Value).to.eql(\"Appt_PurposeOfVisit\");\r",
											"    });\r",
											"}\r",
											"\r",
											"var description_test =()=>{\r",
											"    pm.test(\"Verify lookup description is not empty \", function () {\r",
											"    var responseDetails = JSON.parse(responseBody);\r",
											"    var lookupType_Value = responseDetails.items[0].description\r",
											"    pm.expect(lookupType_Value).to.not.eql(null);\r",
											"    });\r",
											"}\r",
											"\r",
											"responseSizeTest();\r",
											"headerTest();\r",
											"statusCodeTest();\r",
											"responseTimeTest();\r",
											"\r",
											"Lookup_TypeTest();\r",
											"description_test();\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/MasterDataManagementAPI/api/lookup/LookupCodes?Types=Appt_Purposeofvisit",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"MasterDataManagementAPI",
										"api",
										"lookup",
										"LookupCodes"
									],
									"query": [
										{
											"key": "Types",
											"value": "Appt_Purposeofvisit"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Transaction Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response_code = 200;\r",
											"var response_time = 5000;\r",
											"var response_size = 987;\r",
											"\r",
											"\r",
											"var statusCodeTest=()=>{\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"}\r",
											"\r",
											"var responseTimeTest=()=>{\r",
											"        pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time)});\r",
											"}\r",
											"\r",
											"var headerTest=()=>{\r",
											"   pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"   pm.response.to.have.header(\"Content-Type\");});\r",
											"}\r",
											"\r",
											"var responseSizeTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        }\r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"        pm.test(\"response size\", function () {\r",
											"       pm.expect(pm.response.responseSize).to.be.equal(response_size);\r",
											"   });\r",
											"}\r",
											"\r",
											"var Lookup_TypeTest=()=>{\r",
											"    pm.test(\"Verify lookup type is Transaction Type \", function () {\r",
											"    var responseDetails = JSON.parse(responseBody);\r",
											"    var lookupType_Value = responseDetails.items[0].lookup_Type\r",
											"    pm.expect(lookupType_Value).to.eql(\"Appt_TransactionType\");\r",
											"    });\r",
											"}\r",
											"\r",
											"var description_test =()=>{\r",
											"    pm.test(\"Verify lookup description is not empty \", function () {\r",
											"    var responseDetails = JSON.parse(responseBody);\r",
											"    var lookupType_Value = responseDetails.items[0].description\r",
											"    pm.expect(lookupType_Value).to.not.eql(null);\r",
											"    });\r",
											"}\r",
											"\r",
											"var metaData_test =()=>{\r",
											"    pm.test(\"Verify lookup metaData are not empty \", function () {\r",
											"    var responseDetails = JSON.parse(responseBody);\r",
											"    var lookupType_Value = responseDetails.items[0].metadata[0].data;\r",
											"    pm.expect(lookupType_Value).to.not.eql(null);\r",
											"    });\r",
											"}\r",
											"\r",
											"responseSizeTest();\r",
											"headerTest();\r",
											"statusCodeTest();\r",
											"responseTimeTest();\r",
											"Lookup_TypeTest();\r",
											"description_test();\r",
											"metaData_test();\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/MasterDataManagementAPI/api/lookup/LookupCodes?Types=Appt_TransactionType",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"MasterDataManagementAPI",
										"api",
										"lookup",
										"LookupCodes"
									],
									"query": [
										{
											"key": "Types",
											"value": "Appt_TransactionType"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Cargo Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body contains Cargo type Bulk Cargo\",() => {\r",
											"    pm.expect(pm.response.text()).to.include(\"Appt_BlkCargo\");\r",
											"    });\r",
											"\r",
											"var bulk_cargo_id = '31e9feef-498c-4433-94c2-7e756cd3ceb1'\r",
											"var Appt_CargoType_id = 'cf61b51f-64f1-46ca-a8f8-2e5f61258d8a'\r",
											"var Appt_GenCargo_id = 'b13a3ed0-66eb-4aae-ab04-b50cb7f9eb43'\r",
											"\r",
											"var verify_Cargotype_test=()=>{\r",
											"\r",
											"    pm.test(\"Body contains Bulk Cargo ID\",() => {\r",
											"        pm.expect(pm.response.text()).to.include(bulk_cargo_id);\r",
											"    });\r",
											"    pm.test(\"Body contains Container\",() => {\r",
											"        pm.expect(pm.response.text()).to.include(Appt_CargoType_id);\r",
											"    });\r",
											"    pm.test(\"Body contains General Cargo ID\",() => {\r",
											"        pm.expect(pm.response.text()).to.include(Appt_GenCargo_id);\r",
											"    });\r",
											"\r",
											"}\r",
											"verify_Cargotype_test()\r",
											"\r",
											" pm.test(\"Body contains status success\",() => {\r",
											"    pm.expect(pm.response.text()).to.include(3);\r",
											"    });\r",
											"\r",
											"pm.test(\"Json response body contains Bulk Cargo\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Bulk Cargo\");\r",
											"});\r",
											"\r",
											"var response_size = 2617\r",
											"var response_code = 200\r",
											"var response_time = 5000\r",
											"\r",
											"var commonTest=()=>{\r",
											"\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"\r",
											"}\r",
											"commonTest();\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/MasterDataManagementAPI/api/lookup/LookupCodes?Types=Appt_CargoType",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"MasterDataManagementAPI",
										"api",
										"lookup",
										"LookupCodes"
									],
									"query": [
										{
											"key": "Types",
											"value": "Appt_CargoType"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Port",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response_code = 200;\r",
											"var response_time = 500;\r",
											"\r",
											"var statusCodeTest=()=>{\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"}\r",
											"\r",
											"var responseTimeTest=()=>{\r",
											"         pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time)});\r",
											"}\r",
											"\r",
											"var headerTest=()=>{\r",
											"   pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"  });\r",
											"}\r",
											"\r",
											"var Lookup_TypeTest=()=>{\r",
											"    pm.test(\"Verify lookup type is Port \", function () {\r",
											"    var responseDetails = JSON.parse(responseBody);\r",
											"    var lookupType_Value = responseDetails.items[0].lookup_Type\r",
											"    pm.expect(lookupType_Value).to.eql(\"Port\");\r",
											"    });\r",
											"}\r",
											"\r",
											"var description_test =()=>{\r",
											"    pm.test(\"Verify lookup description is not empty \", function () {\r",
											"    var responseDetails = JSON.parse(responseBody);\r",
											"    var lookupType_Value = responseDetails.items[0].description\r",
											"    pm.expect(lookupType_Value).to.not.eql(null);\r",
											"    });\r",
											"}\r",
											"\r",
											"var activeTerminalTest =()=>{\r",
											"    pm.test(\"Verify Terminal is Active \", function () {\r",
											"    var responseDetails = JSON.parse(responseBody);\r",
											"    var lookupType_Value = responseDetails.items[0].active\r",
											"    pm.expect(lookupType_Value).to.not.eql(false);\r",
											"    });\r",
											"}\r",
											"var metaData_test =()=>{\r",
											"    pm.test(\"Verify lookup metaData are not empty \", function () {\r",
											"    var responseDetails = JSON.parse(responseBody);\r",
											"    var lookupType_Value = responseDetails.items[0].metadata[0].data;\r",
											"    pm.expect(lookupType_Value).to.not.eql(null);\r",
											"    });\r",
											"}\r",
											"\r",
											"headerTest();\r",
											"statusCodeTest();\r",
											"responseTimeTest();\r",
											"Lookup_TypeTest();\r",
											"description_test();\r",
											"activeTerminalTest();\r",
											"metaData_test();\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/MasterDataManagementAPI/api/lookup/LookupCodes?Types=Port",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"MasterDataManagementAPI",
										"api",
										"lookup",
										"LookupCodes"
									],
									"query": [
										{
											"key": "Types",
											"value": "Port"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Terminal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"headerTest()\r",
											"\r",
											"var response_size = 644\r",
											"var response_code = 200\r",
											"var response_time = 5000\r",
											"\r",
											"var commonTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        } \r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"\r",
											"        pm.test(\"response size\", function () {\r",
											"        pm.expect(pm.response.responseSize).to.be.equal(response_size);\r",
											"    });\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"\r",
											"\r",
											"}\r",
											"commonTest();\r",
											"\r",
											" pm.test(\"Body contains status success\",() => {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"    });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/MasterDataManagementAPI/api/lookup/LookupCodes?Types=Area",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"MasterDataManagementAPI",
										"api",
										"lookup",
										"LookupCodes"
									],
									"query": [
										{
											"key": "Types",
											"value": "Area"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Save as Draft&Submit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"var response_size = 155\r",
											"var response_code = 200\r",
											"var response_time = 5000\r",
											"\r",
											"var commonTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        } \r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"\r",
											"        pm.test(\"response size\", function () {\r",
											"        pm.expect(pm.response.responseSize).to.be.equal(response_size);\r",
											"    });\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"\r",
											"\r",
											"}\r",
											"commonTest();\r",
											"\r",
											" pm.test(\"Body contains status success\",() => {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"date\":\"2023-06-13 19:43:29.773\",\r\n   \"timeSlot\":\"10:00-12:00\",\r\n   \"type\":\"Type\",\r\n   \"status\":\"DRAFT\",\r\n   \"terminalCode\":\"ADT\",\r\n   \"truckId\":\"FB3DA251-D2C5-4E03-B6E8-2800F3E0766B\",\r\n   \"driverId\":\"24A8D9F6-524D-41D6-B485-E72F3D6E2409\",\r\n   \"truckCompanyId\":\"BFB99C1B-F9B1-4DF5-9C1D-09BC3DAF31DD\",\r\n   \"purposeOfVist\":\"Cargo drof off\",\r\n   \"transactionType\":\"Appt_EGI\",\r\n   \"cargoType\":\"Appt_Container\",\r\n   \"cargoDetails\":[\r\n      {\r\n         \"containerNo\":\"CN0002\",\r\n         \"iSOCode\":\"22B0\"\r\n      },\r\n      {\r\n         \"containerNo\":\"CN0002\",\r\n         \"iSOCode\":\"22B0\"\r\n      }\r\n   ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/appointment",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"appointment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Approval Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											"\r",
											"// var headerTest=()=>{\r",
											"// pm.test(\"Response body has header Data\", function () {\r",
											"//    pm.response.to.have.header(\"Date\");\r",
											"//    pm.response.to.have.header(\"Content-Length\");\r",
											"//    pm.response.to.be.header(\"Content-Type\");\r",
											"// });\r",
											"// }\r",
											"// headerTest()\r",
											"\r",
											"// var response_code = 200\r",
											"// var response_time = 5000\r",
											"\r",
											"// var commonTest=()=>{\r",
											"//     var size=0;\r",
											"//     for (var count in responseBody) {\r",
											"//         if(responseBody.hasOwnProperty(count))\r",
											"//             size += 1;\r",
											"//         } \r",
											"//         console.log(\"BODY SIZE = \" + size);\r",
											"\r",
											"\r",
											"//         pm.test(\"Verify status code should be 200\", function () {\r",
											"//             pm.response.to.be.not.eql(null);\r",
											"//             pm.response.to.have.status(response_code);\r",
											"//         });\r",
											"//              pm.test(\"Response time is less than 5000ms\", function () {\r",
											"//         pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"//     });\r",
											"\r",
											"\r",
											"// }\r",
											"// commonTest();\r",
											"\r",
											"//  pm.test(\"Body contains status success\",() => {\r",
											"//     pm.expect(pm.response.text()).to.include(\"true\");\r",
											"//     });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"date\":\"2023-06-31 09:45:29.773\",\r\n   \"timeSlot\":\"10:00-12:30\",\r\n   \"type\":\"Type\",\r\n   \"status\":\"APPROVED\",\r\n   \"terminalCode\":\"ADT\",\r\n   \"truckId\":\"FB3DA251-D2C5-4E03-B6E8-2800F3E0766B\",\r\n   \"driverId\":\"24A8D9F6-524D-41D6-B485-E72F3D6E2409\",\r\n   \"truckCompanyId\":\"BFB99C1B-F9B1-4DF5-9C1D-09BC3DAF31DD\",\r\n   \"purposeOfVist\":\"Cargo drof off\",\r\n   \"transactionType\":\"Appt_EGI\",\r\n   \"cargoType\":\"Appt_Container\",\r\n   \"cargoDetails\":[\r\n      {\r\n         \"containerNo\":\"CN00054\",\r\n         \"iSOCode\":\"22G0\"\r\n      },\r\n      {\r\n         \"containerNo\":\"CN0006\",\r\n         \"iSOCode\":\"22G1\"\r\n      }\r\n   ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/appointment",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"appointment"
									]
								}
							},
							"response": []
						},
						{
							"name": "View Appointment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response_code = 200\r",
											"var response_time = 5000\r",
											"\r",
											"var commonTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        } \r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"\r",
											"\r",
											"}\r",
											"commonTest();\r",
											"\r",
											" pm.test(\"Body contains status success\",() => {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/appointment/C436AC0E-F22A-4091-AFB0-131890F4B40E",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"appointment",
										"C436AC0E-F22A-4091-AFB0-131890F4B40E"
									]
								}
							},
							"response": []
						},
						{
							"name": "Appointment listing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// var appointment_status_test=()=>{\r",
											"\r",
											"//     var status_cancel=\"CANCEL\"\r",
											"//     var status_approved=\"APPROVED\"\r",
											"//     var status_draft=\"DRAFT\"\r",
											"\r",
											"//         pm.test(\"Listing has contains cancel status\",() => {\r",
											"//             pm.expect(pm.response.text()).to.include(status_cancel);\r",
											"//         });\r",
											"//         pm.test(\"Listing has contains approval status\",() => {\r",
											"//             pm.expect(pm.response.text()).to.include(status_approved);\r",
											"//         });\r",
											"//         pm.test(\"Listing has contains draft status\",() => {\r",
											"//             pm.expect(pm.response.text()).to.include(status_draft);\r",
											"//         });\r",
											"\r",
											"//     }\r",
											"// appointment_status_test()\r",
											"\r",
											"\r",
											"var response_size = 155\r",
											"var response_code = 200\r",
											"var response_time = 5000\r",
											"\r",
											"var commonTest=()=>{\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"\r",
											"\r",
											"}\r",
											"commonTest();\r",
											"\r",
											" pm.test(\"Body contains status success\",() => {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "x-descriptor",
										"value": "{\"pagination\":{\"pageSize\":10,\"pageIndex\":1}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{qaurl}}/Appointment/api/v1/Appointment",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"Appointment",
										"api",
										"v1",
										"Appointment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Appointment ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// var headerTest=()=>{\r",
											"// pm.test(\"Response body has header Data\", function () {\r",
											"//    pm.response.to.have.header(\"Date\");\r",
											"//    pm.response.to.have.header(\"Content-Length\");\r",
											"//    pm.response.to.be.header(\"Content-Type\");\r",
											"// });\r",
											"// }\r",
											"// headerTest()\r",
											"\r",
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											"\r",
											"// var response_code = 200\r",
											"// var response_time = 5000\r",
											"\r",
											"// var commonTest=()=>{\r",
											"//     var size=0;\r",
											"//     for (var count in responseBody) {\r",
											"//         if(responseBody.hasOwnProperty(count))\r",
											"//             size += 1;\r",
											"//         } \r",
											"//         console.log(\"BODY SIZE = \" + size);\r",
											"\r",
											"//         pm.test(\"Verify status code should be 200\", function () {\r",
											"//             pm.response.to.be.not.eql(null);\r",
											"//             pm.response.to.have.status(response_code);\r",
											"//         });\r",
											"//              pm.test(\"Response time is less than 5000ms\", function () {\r",
											"//         pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"//     });\r",
											"\r",
											"// }\r",
											"// commonTest();\r",
											"\r",
											"//  pm.test(\"Body contains status success\",() => {\r",
											"//     pm.expect(pm.response.text()).to.include(\"true\");\r",
											"//     });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n\"id\": \"1E145A0F-CED7-4EC4-8E7D-01E93438B098\",\r\n   \"date\":\"2023-05-30 09:43:29.773\",\r\n   \"timeSlot\":\"10:00-12:30\",\r\n   \"type\":\"Type\",\r\n   \"status\":\"APPROVED\",\r\n   \"terminalCode\":\"ADT\",\r\n   \"truckId\":\"FB3DA251-D2C5-4E03-B6E8-2800F3E0766B\",\r\n   \"driverId\":\"24A8D9F6-524D-41D6-B485-E72F3D6E2409\",\r\n   \"truckCompanyId\":\"BFB99C1B-F9B1-4DF5-9C1D-09BC3DAF31DD\",\r\n   \"purposeOfVist\":\"Cargo drof off\",\r\n   \"transactionType\":\"Appt_EGI\",\r\n   \"cargoType\":\"Appt_Container\",\r\n   \"cargoDetails\":[\r\n      {\r\n         \"containerNo\":\"CON5645\",\r\n         \"iSOCode\":\"22B0\"\r\n      },\r\n      {\r\n         \"containerNo\":\"CN0004\",\r\n         \"iSOCode\":\"22B0\"\r\n      }\r\n   ]\r\n}\r\n"
								},
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Appointment/1E145A0F-CED7-4EC4-8E7D-01E93438B098",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Appointment",
										"1E145A0F-CED7-4EC4-8E7D-01E93438B098"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Appointment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											"\r",
											"// var headerTest=()=>{\r",
											"// pm.test(\"Response body has header Data\", function () {\r",
											"//    pm.response.to.have.header(\"Date\");\r",
											"//    pm.response.to.have.header(\"Content-Length\");\r",
											"//    pm.response.to.be.header(\"Content-Type\");\r",
											"// });\r",
											"// }\r",
											"// headerTest()\r",
											"\r",
											"// var response_code = 200\r",
											"// var response_time = 5000\r",
											"\r",
											"// var commonTest=()=>{\r",
											"//     var size=0;\r",
											"//     for (var count in responseBody) {\r",
											"//         if(responseBody.hasOwnProperty(count))\r",
											"//             size += 1;\r",
											"//         } \r",
											"//         console.log(\"BODY SIZE = \" + size);\r",
											"\r",
											"//         pm.test(\"Verify status code should be 200\", function () {\r",
											"//             pm.response.to.be.not.eql(null);\r",
											"//             pm.response.to.have.status(response_code);\r",
											"//         });\r",
											"//              pm.test(\"Response time is less than 5000ms\", function () {\r",
											"//         pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"//     });\r",
											"\r",
											"// }\r",
											"// commonTest();\r",
											"\r",
											"//  pm.test(\"Body contains status success\",() => {\r",
											"//     pm.expect(pm.response.text()).to.include(\"true\");\r",
											"//     });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/Appointment/api/v1/Appointment/cancel/c65c2f2e-8953-4f71-9d07-fa646d8efab2",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"Appointment",
										"api",
										"v1",
										"Appointment",
										"cancel",
										"c65c2f2e-8953-4f71-9d07-fa646d8efab2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tariff By ChargeType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response_code = 200;\r",
											"var response_time = 5000;\r",
											"var response = JSON.parse(responseBody);\r",
											"\r",
											"var sucessResponseTest=()=>{\r",
											"    pm.test(\"Response should be successful\", function () {\r",
											"    pm.expect(response.success).to.eql(true);\r",
											"    pm.expect(response.errorlst).to.be.null;\r",
											"    pm.expect(response.msg).not.to.be.null;\r",
											"    });\r",
											"}\r",
											"\r",
											"var statusCodeTest=()=>{\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"}\r",
											"\r",
											"var responseTimeTest=()=>{\r",
											"         pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time)});\r",
											"}\r",
											"\r",
											"var headerTest=()=>{\r",
											"   pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");});\r",
											"}\r",
											"\r",
											"headerTest();\r",
											"statusCodeTest();\r",
											"responseTimeTest();\r",
											"sucessResponseTest();\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/Tariff/GetTariffByChargeType?chargeType=Appointment Fee",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"Tariff",
										"GetTariffByChargeType"
									],
									"query": [
										{
											"key": "chargeType",
											"value": "Appointment Fee"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "View log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response_code = 200;\r",
											"var response_time = 5000;\r",
											"var response = JSON.parse(responseBody);\r",
											"\r",
											"var sucessResponseTest=()=>{\r",
											"    pm.test(\"Response should be successful\", function () {\r",
											"    pm.expect(response.success).to.eql(true);\r",
											"    pm.expect(response.errorlst).to.be.null;\r",
											"    pm.expect(response.msg).not.to.be.null;\r",
											"    });\r",
											"}\r",
											"\r",
											"var statusCodeTest=()=>{\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"}\r",
											"\r",
											"var responseTimeTest=()=>{\r",
											"         pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time)});\r",
											"}\r",
											"\r",
											"var headerTest=()=>{\r",
											"   pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");});\r",
											"}\r",
											"\r",
											"pm.test(\"Object is contained\", () => {\r",
											"  const expectedObject = {\r",
											"    \"success\": true,\r",
											"    \"errorlst\": null,\r",
											"    \"msg\": \"Appointment logs Fetched successfully\",\r",
											"   \r",
											"  };\r",
											"  pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"headerTest();\r",
											"statusCodeTest();\r",
											"responseTimeTest();\r",
											"sucessResponseTest();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/appointment/logs/a7628901-6d63-4a95-9b09-a123d6edcde0",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"appointment",
										"logs",
										"a7628901-6d63-4a95-9b09-a123d6edcde0"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "PCS_Vessel_Registration",
			"item": [
				{
					"name": "3_Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// //To read Json\r",
									"const jsonData = pm.response.json();\r",
									"console.log(jsonData);\r",
									"\r",
									"//Set token as an environmental variable\r",
									"const token_new = jsonData.data.token;\r",
									"\r",
									"// pm.environment.set(\"token\", token);\r",
									"// pm.collectionVariables.set(\"token_new\", token_new);\r",
									"postman.setEnvironmentVariable(\"token3\",token_new);\r",
									"console.log(token_new);\r",
									"\r",
									"\r",
									"pm.test(\"verify Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImp0aSI6WyJjNWJiNTA4Mi0zMjgxLTQ1MWUtYWVkZS1lNmI4ZDE3ODdkNGQiLCI4NWExM2E0NC0wMWVkLTQ5OTctYWYyNC1mNzljOGI2OGU2MDEiXSwiVVNFUkdST1VQIjoiQ2xlcmsiLCJGVUxMTkFNRSI6IlRlc3R1c2VyIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6InRlc3R1c2VyIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9leHBpcmVkIjoiNS85LzIwMjIgMToyNjozNyBQTSIsIk9SR0FOSVpBVElPTlVOSVRTIjoiIiwiT1JHQU5JWkFUSU9OUyI6IiIsIkVNQUlMIjoidGVzdHVzZXJAbWFxdGEuYWUiLCJleHAiOjE2NTIwODgzOTcsImlzcyI6Ik1SLklkZW50aXR5LkFQSSIsImF1ZCI6Ik1SLlNlcnZpY2VzIn0.4AaAlA5MpXABsS8S5cC9BS8Gh0Bp2k1zuzVz5715dTA",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n  \"username\": \"testuser\",\r\n  \"password\": \"P@ssw0rd\"\r\n\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{tokenURL}}/IdentityManagementAPI/API/login",
							"host": [
								"{{tokenURL}}"
							],
							"path": [
								"IdentityManagementAPI",
								"API",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Shipping Line Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									"// var jsonData = pm.response.json(); \r",
									"// tests[\"Success message true\"]=jsonData.success==true;\r",
									"// tests[\"lookUpType is ShippingLine\"]=jsonData.lookUpType == \"ShippingLine\";\r",
									"pm.test(\"Json response body contains Tenants\", function () {\r",
									"       pm.expect(pm.response.text()).to.include(\"ShippingLine\"); \r",
									"    });\r",
									"\r",
									"var header_Test = () => {\r",
									"    pm.test(\"Response body has header data\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\")\r",
									"        pm.response.to.have.header(\"Content-Length\")\r",
									"        pm.response.to.have.header(\"Date\")\r",
									"    });\r",
									"}\r",
									"header_Test()\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"        \"data\": {\r",
									"            \"type\": \"array\",\r",
									"            \"items\": [\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"code\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"description\": {\r",
									"                            \"type\": \"string\"\r",
									"                        },\r",
									"                        \"lookUpType\": {\r",
									"                            \"type\": \"string\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"required\": [\r",
									"                        \"id\",\r",
									"                        \"code\",\r",
									"                        \"description\",\r",
									"                        \"lookUpType\"\r",
									"                    ]\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        \"msg\": {\r",
									"            \"type\": \"null\"\r",
									"        },\r",
									"        \"success\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"errorlst\": {\r",
									"            \"type\": \"null\"\r",
									"        }\r",
									"    },\r",
									"    \"required\": [\r",
									"        \"data\",\r",
									"        \"msg\",\r",
									"        \"success\",\r",
									"        \"errorlst\"\r",
									"    ]\r",
									"}\r",
									"var json = pm.response.json()\r",
									"\r",
									"pm.test('Shipping Line Lookup schema validation', function () {\r",
									"\r",
									"    pm.expect(tv4.validate(json, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/VesselRegistration/api/v1/LookUp/ShippingLine",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"VesselRegistration",
								"api",
								"v1",
								"LookUp",
								"ShippingLine"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Reference Port Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content type data check\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json(); \r",
									"tests[\"Success message is true\"]=jsonData.success==true;\r",
									"pm.test(\"Json response body contains ReferencePort Umm Qasr Port\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Umm Qasr Port\");\r",
									"});\r",
									"\r",
									"var header_Test = () => {\r",
									"    pm.test(\"Response body has header data\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\")\r",
									"        pm.response.to.have.header(\"Content-Length\")\r",
									"        pm.response.to.have.header(\"Date\")\r",
									"    });\r",
									"}\r",
									"header_Test()\r",
									"pm.test(\"lookUpType is ReferencePort\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.data[0].lookUpType).to.eql(\"ReferencePort\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/VesselRegistration/api/v1/LookUp/ReferencePort",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"VesselRegistration",
								"api",
								"v1",
								"LookUp",
								"ReferencePort"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Classification Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json(); \r",
									"tests[\"Success message is true\"]=jsonData.success==true;\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});\r",
									"var header_Test = () => {\r",
									"    pm.test(\"Response body has header data\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\")\r",
									"        pm.response.to.have.header(\"Content-Length\")\r",
									"        pm.response.to.have.header(\"Date\")\r",
									"    });\r",
									"}\r",
									"header_Test()\r",
									"pm.test(\"lookUpType is ClassificationEntity\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.data[0].lookUpType).to.eql(\"ClassificationEntity\");\r",
									"\r",
									"});\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"code\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"lookUpType\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"code\",\r",
									"            \"description\",\r",
									"            \"lookUpType\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"msg\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"errorlst\": {\r",
									"      \"type\": \"null\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"data\",\r",
									"    \"msg\",\r",
									"    \"success\",\r",
									"    \"errorlst\"\r",
									"  ]\r",
									"}\r",
									"var json = pm.response.json()\r",
									"\r",
									"pm.test('Shipping Line Lookup schema validation', function(){\r",
									"\r",
									"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/VesselRegistration/api/v1/LookUp/ClassificationEntity",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"VesselRegistration",
								"api",
								"v1",
								"LookUp",
								"ClassificationEntity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Vessel ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// pm.test(\"requestType\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"requestType\"); \r",
									"\r",
									"// });\r",
									"pm.test(\"status\", function () {\r",
									"\r",
									"    pm.expect(pm.response.text()).to.include(\"Approved\"); \r",
									"\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"\r",
									"});\r",
									"\r",
									"var size=0;\r",
									"for (var count in responseBody) {\r",
									"if(responseBody.hasOwnProperty(count))\r",
									"size += 1;\r",
									"}\r",
									"console.log(\"BODY SIZE = \" + size);\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"data\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"requestType\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"vesselName\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"vesselType\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"imo\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"officialNumber\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"classificationEntity\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"callSign\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"referencePort\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"countryOfRegistration\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"shippingLine\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"vesselFlag\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"yearOfConstruction\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"registrationYear\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"shipOwner\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"deadWeight\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"grt\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"nrt\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"loa\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"beam\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"bridgeToBow\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"capacity\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"maxAirDraft\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"maxForwardDraft\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"maxSternDraft\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"displacement\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"remarks\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"status\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"isActive\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"vesselAgent\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"attachments\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"fileName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"attachmentType\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"fileReference\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"expiryDate\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"fileName\",\r",
									"                \"attachmentType\",\r",
									"                \"fileReference\",\r",
									"                \"expiryDate\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"requestType\",\r",
									"        \"vesselName\",\r",
									"        \"vesselType\",\r",
									"        \"imo\",\r",
									"        \"officialNumber\",\r",
									"        \"classificationEntity\",\r",
									"        \"callSign\",\r",
									"        \"referencePort\",\r",
									"        \"countryOfRegistration\",\r",
									"        \"shippingLine\",\r",
									"        \"vesselFlag\",\r",
									"        \"yearOfConstruction\",\r",
									"        \"registrationYear\",\r",
									"        \"shipOwner\",\r",
									"        \"deadWeight\",\r",
									"        \"grt\",\r",
									"        \"nrt\",\r",
									"        \"loa\",\r",
									"        \"beam\",\r",
									"        \"bridgeToBow\",\r",
									"        \"capacity\",\r",
									"        \"maxAirDraft\",\r",
									"        \"maxForwardDraft\",\r",
									"        \"maxSternDraft\",\r",
									"        \"displacement\",\r",
									"        \"remarks\",\r",
									"        \"status\",\r",
									"        \"isActive\",\r",
									"        \"vesselAgent\",\r",
									"        \"id\",\r",
									"        \"attachments\"\r",
									"      ]\r",
									"    },\r",
									"    \"msg\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"errorlst\": {\r",
									"      \"type\": \"null\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"data\",\r",
									"    \"msg\",\r",
									"    \"success\",\r",
									"    \"errorlst\"\r",
									"  ]\r",
									"}\r",
									"  \r",
									"\r",
									"var json = pm.response.json()\r",
									"\r",
									"pm.test('schema is valid', function(){\r",
									"\r",
									"    pm.expect(tv4.validate(json, schema)).to.be.false; \r",
									"\r",
									"\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is multipart/form-data\", function () \r",
									"\r",
									"    {pm.response.to.have.header(\"Content-Type\"); });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/VesselRegistration/api/v1.0/vessel",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"VesselRegistration",
								"api",
								"v1.0",
								"vessel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vessel details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/VesselRegistration/api/v1.0/vessel/cfd1842d-f2a7-4d22-8b50-ff8648210563",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"VesselRegistration",
								"api",
								"v1.0",
								"vessel",
								"cfd1842d-f2a7-4d22-8b50-ff8648210563"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vessel Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
									"   postman.skipRequest;\r",
									"}\r",
									"\r",
									"// pm.test(\"id\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"da04bde1-00ed-45ca-b4c7-4d707cec9d0b\"); \r",
									"\r",
									"// });\r",
									"// pm.test(\"code\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"PendingApproval\"); \r",
									"// });\r",
									"// pm.test(\"description\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"Pending Approval\"); \r",
									"// });\r",
									"\r",
									"// pm.test(\"id\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"8ce28d93-d2b8-4271-aa1d-6415184e3985\"); \r",
									"// });\r",
									"\r",
									"// pm.test(\"code\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"Rejected\"); \r",
									"// });\r",
									"// pm.test(\"description\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"Rejected\"); \r",
									"// });\r",
									"// pm.test(\"id\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"71a68ef2-a5e8-4648-a087-7d412115d1a2\"); \r",
									"// });\r",
									"// pm.test(\"code\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"Approved\"); \r",
									"// });\r",
									"\r",
									"// pm.test(\"description\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"Approved\"); \r",
									"// });\r",
									"\r",
									"// pm.test(\"id\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"c8773a12-dec9-492b-877b-6d11b295848e\"); \r",
									"// });\r",
									"// pm.test(\"code\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"Draft\"); \r",
									"// });\r",
									"\r",
									"// pm.test(\"description\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"Draft\"); \r",
									"// });\r",
									"\r",
									"// pm.test(\"Response time is less than 500ms\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(3631);\r",
									"\r",
									"// });\r",
									"\r",
									"// var size=0;\r",
									"// for (var count in responseBody) {\r",
									"// if(responseBody.hasOwnProperty(count))\r",
									"// size += 1;\r",
									"// }\r",
									"// console.log(\"BODY SIZE = \" + size);\r",
									"\r",
									"// pm.test(\"response size\", function () {\r",
									"// pm.expect(pm.response.responseSize).to.be.equal(505);\r",
									"// });\r",
									"\r",
									"// var schema ={\r",
									"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"//   \"type\": \"object\",\r",
									"//   \"properties\": {\r",
									"//     \"data\": {\r",
									"//       \"type\": \"array\",\r",
									"//       \"items\": [\r",
									"//         {\r",
									"//           \"type\": \"object\",\r",
									"//           \"properties\": {\r",
									"//             \"id\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"code\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"description\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"lookUpType\": {\r",
									"//               \"type\": \"string\"\r",
									"//             }\r",
									"//           },\r",
									"//           \"required\": [\r",
									"//             \"id\",\r",
									"//             \"code\",\r",
									"//             \"description\",\r",
									"//             \"lookUpType\"\r",
									"//           ]\r",
									"//         },\r",
									"//         {\r",
									"//           \"type\": \"object\",\r",
									"//           \"properties\": {\r",
									"//             \"id\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"code\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"description\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"lookUpType\": {\r",
									"//               \"type\": \"string\"\r",
									"//             }\r",
									"//           },\r",
									"//           \"required\": [\r",
									"//             \"id\",\r",
									"//             \"code\",\r",
									"//             \"description\",\r",
									"//             \"lookUpType\"\r",
									"//           ]\r",
									"//         },\r",
									"//         {\r",
									"//           \"type\": \"object\",\r",
									"//           \"properties\": {\r",
									"//             \"id\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"code\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"description\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"lookUpType\": {\r",
									"//               \"type\": \"string\"\r",
									"//             }\r",
									"//           },\r",
									"//           \"required\": [\r",
									"//             \"id\",\r",
									"//             \"code\",\r",
									"//             \"description\",\r",
									"//             \"lookUpType\"\r",
									"//           ]\r",
									"//         },\r",
									"//         {\r",
									"//           \"type\": \"object\",\r",
									"//           \"properties\": {\r",
									"//             \"id\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"code\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"description\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"lookUpType\": {\r",
									"//               \"type\": \"string\"\r",
									"//             }\r",
									"//           },\r",
									"//           \"required\": [\r",
									"//             \"id\",\r",
									"//             \"code\",\r",
									"//             \"description\",\r",
									"//             \"lookUpType\"\r",
									"//           ]\r",
									"//         }\r",
									"//       ]\r",
									"//     },\r",
									"//     \"msg\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"success\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"errorlst\": {\r",
									"//       \"type\": \"null\"\r",
									"//     }\r",
									"//   },\r",
									"//   \"required\": [\r",
									"//     \"data\",\r",
									"//     \"msg\",\r",
									"//     \"success\",\r",
									"//     \"errorlst\"\r",
									"//   ]\r",
									"// }\r",
									"  \r",
									"\r",
									"// var json = pm.response.json()\r",
									"\r",
									"// pm.test('schema is valid', function(){\r",
									"\r",
									"//     pm.expect(tv4.validate(json, schema)).to.be.true; \r",
									"\r",
									"// })\r",
									"\r",
									"// pm.test(\"Status code is 200\", function () {\r",
									"//   pm.response.to.have.status(200);\r",
									"// });\r",
									"\r",
									"// pm.test(\"Content-Type is application/json\", function () \r",
									"\r",
									"//     {pm.response.to.have.header(\"Content-Type\"); });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/VesselRegistration/api/v1/LookUp/Status",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"VesselRegistration",
								"api",
								"v1",
								"LookUp",
								"Status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vessel IMO search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () \r",
									"\r",
									"    {pm.response.to.have.header(\"Content-Type\"); });\r",
									"\r",
									"     pm.test(\"success\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\"); \r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"// if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
									"//    postman.skipRequest;\r",
									"// }\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/vesselregistration/api/v1/vessel/search?searchField=IMO&searchTerm=9812321",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"vesselregistration",
								"api",
								"v1",
								"vessel",
								"search"
							],
							"query": [
								{
									"key": "searchField",
									"value": "IMO"
								},
								{
									"key": "searchTerm",
									"value": "9812321"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Official number search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
									"   postman.skipRequest;\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"text\", function () {\r",
									"\r",
									"    pm.expect(pm.response.text()).to.include(\"1\"); \r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () \r",
									"\r",
									"    {pm.response.to.have.header(\"Content-Type\"); });\r",
									"\r",
									"\r",
									"// var schema ={\r",
									"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"//   \"type\": \"object\",\r",
									"//   \"properties\": {\r",
									"//     \"data\": {\r",
									"//       \"type\": \"array\",\r",
									"//       \"items\": [\r",
									"//         {\r",
									"//           \"type\": \"object\",\r",
									"//           \"properties\": {\r",
									"//             \"id\": {\r",
									"//               \"type\": \"string\"\r",
									"//             },\r",
									"//             \"text\": {\r",
									"//               \"type\": \"string\"\r",
									"//             }\r",
									"//           },\r",
									"//           \"required\": [\r",
									"//             \"id\",\r",
									"//             \"text\"\r",
									"//           ]\r",
									"//         }\r",
									"//       ]\r",
									"//     },\r",
									"//     \"msg\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"success\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"errorlst\": {\r",
									"//       \"type\": \"null\"\r",
									"//     }\r",
									"//   },\r",
									"//   \"required\": [\r",
									"//     \"data\",\r",
									"//     \"msg\",\r",
									"//     \"success\",\r",
									"//     \"errorlst\"\r",
									"//   ]\r",
									"// }\r",
									"  \r",
									"\r",
									"// var json = pm.response.json()\r",
									"\r",
									"// pm.test('schema is valid', function(){\r",
									"\r",
									"//     pm.expect(tv4.validate(json, schema)).to.be.true; \r",
									"\r",
									"// })\r",
									"\r",
									"// pm.test(\"Status code is 200\", function () {\r",
									"//   pm.response.to.have.status(200);\r",
									"// });\r",
									"\r",
									"// pm.test(\"Content-Type is application/json\", function () \r",
									"\r",
									"//     {pm.response.to.have.header(\"Content-Type\"); });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/vesselregistration/api/v1/vessel/search?searchField=officialnumber&searchTerm=145671110",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"vesselregistration",
								"api",
								"v1",
								"vessel",
								"search"
							],
							"query": [
								{
									"key": "searchField",
									"value": "officialnumber"
								},
								{
									"key": "searchTerm",
									"value": "145671110"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Call sign search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
									"//    postman.skipRequest;\r",
									"// }\r",
									"\r",
									"\r",
									"pm.test(\"text\", function () {\r",
									"\r",
									"    pm.expect(pm.response.text()).to.include(\"CAH\"); \r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"text\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"text\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"msg\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"errorlst\": {\r",
									"      \"type\": \"null\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"data\",\r",
									"    \"msg\",\r",
									"    \"success\",\r",
									"    \"errorlst\"\r",
									"  ]\r",
									"}\r",
									"  \r",
									"\r",
									"var json = pm.response.json()\r",
									"\r",
									"pm.test('schema is valid', function(){\r",
									"\r",
									"    pm.expect(tv4.validate(json, schema)).to.be.false; \r",
									"\r",
									"\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () \r",
									"\r",
									"    {pm.response.to.have.header(\"Content-Type\"); });\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{qaurl}}/vesselregistration/api/v1/vessel/search?searchField=callsign&searchTerm=CAH",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"vesselregistration",
								"api",
								"v1",
								"vessel",
								"search"
							],
							"query": [
								{
									"key": "searchField",
									"value": "callsign"
								},
								{
									"key": "searchTerm",
									"value": "CAH"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Vessel flag search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"  pm.response.to.have.status(200);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () \r",
									"    {pm.response.to.have.header(\"Content-Type\"); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/vesselregistration/api/v1/vessel/search?searchField=vesselflag&searchTerm=Flag",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"vesselregistration",
								"api",
								"v1",
								"vessel",
								"search"
							],
							"query": [
								{
									"key": "searchField",
									"value": "vesselflag"
								},
								{
									"key": "searchTerm",
									"value": "Flag"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Vessel type search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"\r",
									"});\r",
									"\r",
									"// var size=0;\r",
									"// for (var count in responseBody) {\r",
									"// if(responseBody.hasOwnProperty(count))\r",
									"// size += 1;\r",
									"// }\r",
									"// console.log(\"BODY SIZE = \" + size);\r",
									"\r",
									"// pm.test(\"response size\", function () {\r",
									"// pm.expect(pm.response.responseSize).to.be.equal(292);\r",
									"// });\r",
									"\r",
									"\r",
									"// pm.test(\"Status code is 200\", function () {\r",
									"//   pm.response.to.have.status(200);\r",
									"// });\r",
									"\r",
									"// pm.test(\"Content-Type is application/json\", function () \r",
									"\r",
									"//     {pm.response.to.have.header(\"Content-Type\"); });\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/vesselregistration/api/v1/vessel/search?searchField=vesseltype&searchTerm=bdss",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"vesselregistration",
								"api",
								"v1",
								"vessel",
								"search"
							],
							"query": [
								{
									"key": "searchField",
									"value": "vesseltype"
								},
								{
									"key": "searchTerm",
									"value": "bdss"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Vessel Register Information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									"\r",
									"// var size=0;\r",
									"// for (var count in responseBody) {\r",
									"// if(responseBody.hasOwnProperty(count))\r",
									"// size +=1 ;\r",
									"\r",
									"// }\r",
									"// console.log(\"BODY SIZE = \" + size);\r",
									"\r",
									"// pm.test(\"response size\", function () {\r",
									"\r",
									"// pm.expect(pm.response.responseSize).to.be.equal(2409);\r",
									"\r",
									"// })\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"  pm.response.to.have.status(200);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () \r",
									"\r",
									"\r",
									"\r",
									"    {pm.response.to.have.header(\"Content-Type\"); });\r",
									"\r",
									"\r",
									"\r",
									"    \r",
									"\r",
									"    pm.test(\"success\", function () {\r",
									"\r",
									"    pm.expect(pm.response.text()).to.include(\"true\"); \r",
									"\r",
									"\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/MasterDatamanagementAPI/api/lookup?Type=VesselReg_Info",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"MasterDatamanagementAPI",
								"api",
								"lookup"
							],
							"query": [
								{
									"key": "Type",
									"value": "VesselReg_Info"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel vessel request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
									"   postman.skipRequest;\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"// pm.test(\"Data\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"Vessel cancelled successfully\"); \r",
									"\r",
									"// });\r",
									"\r",
									"// pm.test(\"Response time is less than 5000ms\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"\r",
									"// });\r",
									"\r",
									"// var size=0;\r",
									"// for (var count in responseBody) {\r",
									"// if(responseBody.hasOwnProperty(count))\r",
									"// size += 1;\r",
									"// }\r",
									"// console.log(\"BODY SIZE = \" + size);\r",
									"\r",
									"// pm.test(\"response size\", function () {\r",
									"// pm.expect(pm.response.responseSize).to.be.equal(82);\r",
									"// });\r",
									"\r",
									"// var schema ={\r",
									"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"//   \"type\": \"object\",\r",
									"//   \"properties\": {\r",
									"//     \"data\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"msg\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"success\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"errorlst\": {\r",
									"//       \"type\": \"null\"\r",
									"//     }\r",
									"//   },\r",
									"//   \"required\": [\r",
									"//     \"data\",\r",
									"//     \"msg\",\r",
									"//     \"success\",\r",
									"//     \"errorlst\"\r",
									"//   ]\r",
									"// }\r",
									"  \r",
									"\r",
									"// var json = pm.response.json()\r",
									"\r",
									"// pm.test('schema is valid', function(){\r",
									"\r",
									"//     pm.expect(tv4.validate(json, schema)).to.be.true; \r",
									"\r",
									"// })\r",
									"\r",
									"// pm.test(\"Status code is 200\", function () {\r",
									"//   pm.response.to.have.status(200);\r",
									"// });\r",
									"\r",
									"// pm.test(\"Content-Type is application/json\", function () \r",
									"\r",
									"//     {pm.response.to.have.header(\"Content-Type\"); });\r",
									"\r",
									"//      pm.test(\"success\", function () {\r",
									"\r",
									"//     pm.expect(pm.response.text()).to.include(\"true\"); \r",
									"\r",
									"// });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/VesselRegistration/api/v1.0/vessel/{abd10512-aafa-4756-b1ac-1b83a3da80df}/cancel",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"VesselRegistration",
								"api",
								"v1.0",
								"vessel",
								"{abd10512-aafa-4756-b1ac-1b83a3da80df}",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vessel Registration logs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"\r",
									"});\r",
									"\r",
									"var size=0;\r",
									"for (var count in responseBody) {\r",
									"if(responseBody.hasOwnProperty(count))\r",
									"size +=1 ;\r",
									"}\r",
									"console.log(\"BODY SIZE = \" + size);\r",
									"pm.test(\"response size\", function () {\r",
									"pm.expect(pm.response.responseSize).to.be.equal(1783);\r",
									"})\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () \r",
									"\r",
									"    {pm.response.to.have.header(\"Content-Type\"); });\r",
									"\r",
									"     pm.test(\"success\", function () {\r",
									"\r",
									"    pm.expect(pm.response.text()).to.include(\"true\"); \r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{qaurl}}/VesselRegistration/api/v1.0/vessel/abd10512-aafa-4756-b1ac-1b83a3da80df/logs",
							"host": [
								"{{qaurl}}"
							],
							"path": [
								"VesselRegistration",
								"api",
								"v1.0",
								"vessel",
								"abd10512-aafa-4756-b1ac-1b83a3da80df",
								"logs"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PCS_ePass",
			"item": [
				{
					"name": "Lookups types",
					"item": [
						{
							"name": "1_Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// //To read Json\r",
											"const jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"//Set token as an environmental variable\r",
											"const token_new = jsonData.data.token;\r",
											"\r",
											"// pm.environment.set(\"token\", token);\r",
											"// pm.collectionVariables.set(\"token_new\", token_new);\r",
											"postman.setEnvironmentVariable(\"token\",token_new);\r",
											"console.log(token_new);\r",
											"\r",
											"\r",
											"pm.test(\"verify Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImp0aSI6WyJjNWJiNTA4Mi0zMjgxLTQ1MWUtYWVkZS1lNmI4ZDE3ODdkNGQiLCI4NWExM2E0NC0wMWVkLTQ5OTctYWYyNC1mNzljOGI2OGU2MDEiXSwiVVNFUkdST1VQIjoiQ2xlcmsiLCJGVUxMTkFNRSI6IlRlc3R1c2VyIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6InRlc3R1c2VyIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9leHBpcmVkIjoiNS85LzIwMjIgMToyNjozNyBQTSIsIk9SR0FOSVpBVElPTlVOSVRTIjoiIiwiT1JHQU5JWkFUSU9OUyI6IiIsIkVNQUlMIjoidGVzdHVzZXJAbWFxdGEuYWUiLCJleHAiOjE2NTIwODgzOTcsImlzcyI6Ik1SLklkZW50aXR5LkFQSSIsImF1ZCI6Ik1SLlNlcnZpY2VzIn0.4AaAlA5MpXABsS8S5cC9BS8Gh0Bp2k1zuzVz5715dTA",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n  \"username\": \"testuser\",\r\n  \"password\": \"P@ssw0rd\"\r\n\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{tokenURL}}/IdentityManagementAPI/API/login",
									"host": [
										"{{tokenURL}}"
									],
									"path": [
										"IdentityManagementAPI",
										"API",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "EntryReason",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Author:: Fathih\r",
											"\r",
											"var schema = {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})\r",
											" \r",
											"var respose_size = 262 \r",
											"var response_time = 5000\r",
											"var response_code = 200\r",
											"\r",
											"var commonTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        }\r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"        pm.test(\"response size\", function () {\r",
											"        pm.expect(pm.response.responseSize).to.be.equal(respose_size);\r",
											"    });\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 2000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"}\r",
											"commonTest();\r",
											"\r",
											"\r",
											"var active_environment = \"PCS_Iraq_QA\"\r",
											"var entry_reason = \"lookup_Type\"\r",
											"\r",
											"var environmentTest=()=>{\r",
											"    pm.test(\"Check the active environment\", () => {\r",
											"        pm.expect(pm.environment.name).to.eql(active_environment);\r",
											"    });\r",
											"            pm.test(\"Content-Type is present\", function () \r",
											"        {pm.response.to.have.header(\"Content-Type\"); });\r",
											"    }\r",
											"environmentTest()\r",
											"var passEntryTest=()=>{\r",
											"    pm.test(\"Json response body contains string\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(entry_reason); \r",
											"            });\r",
											"                pm.test(\"Body contains status success\",() => {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"    });\r",
											"\r",
											"}\r",
											"passEntryTest()\r",
											"\r",
											"var headerTest=()=>{\r",
											"    \r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"headerTest()\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/Duration?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"Duration"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "EntryReason arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Author:: Fathih\r",
											"\r",
											"var schema = {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})\r",
											" \r",
											"var respose_size = 275 \r",
											"var response_time = 5000\r",
											"var response_code = 200\r",
											"\r",
											"var commonTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        }\r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"        pm.test(\"response size\", function () {\r",
											"        pm.expect(pm.response.responseSize).to.be.equal(respose_size);\r",
											"    });\r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 2000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"}\r",
											"commonTest();\r",
											"\r",
											"\r",
											"var active_environment = \"PCS_Iraq_QA\"\r",
											"var entry_reason = \"lookup_Type\"\r",
											"\r",
											"var environmentTest=()=>{\r",
											"    pm.test(\"Check the active environment\", () => {\r",
											"        pm.expect(pm.environment.name).to.eql(active_environment);\r",
											"    });\r",
											"            pm.test(\"Content-Type is present\", function () \r",
											"        {pm.response.to.have.header(\"Content-Type\"); });\r",
											"    }\r",
											"environmentTest()\r",
											"var passEntryTest=()=>{\r",
											"    pm.test(\"Json response body contains string\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(entry_reason); \r",
											"            });\r",
											"                pm.test(\"Body contains status success\",() => {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"    });\r",
											"\r",
											"}\r",
											"passEntryTest()\r",
											"\r",
											"var headerTest=()=>{\r",
											"    \r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"headerTest()\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/Duration?lang=ar-AE",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"Duration"
									],
									"query": [
										{
											"key": "lang",
											"value": "ar-AE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Duration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var duration_type = \"Day\"\r",
											"var duration_time = \"Hour\"\r",
											"var duration_status = \"true\"\r",
											"\r",
											"var durationTest = () =>{   \r",
											"    pm.test(\"Json response body contains string\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(duration_type); \r",
											"    });\r",
											"            pm.test(\"Body contains string\",() => {\r",
											"                 pm.expect(pm.response.text()).to.include(duration_time);\r",
											"                    });\r",
											"            pm.test(\"Json response success status\",() => {\r",
											"                pm.expect(pm.response.text()).to.include(duration_status);\r",
											"                    });\r",
											"            }\r",
											"durationTest();\r",
											"\r",
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"\r",
											"headerTest()\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/Duration?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"Duration"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Duration Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var duration_type = \"يوميًا\"\r",
											"var duration_time = \"يوميًا\"\r",
											"var duration_status = \"true\"\r",
											"\r",
											"var durationTest = () =>{   \r",
											"    pm.test(\"Json response body contains string\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(duration_type); \r",
											"    });\r",
											"            pm.test(\"Body contains string\",() => {\r",
											"                 pm.expect(pm.response.text()).to.include(duration_time);\r",
											"                    });\r",
											"            pm.test(\"Json response success status\",() => {\r",
											"                pm.expect(pm.response.text()).to.include(duration_status);\r",
											"                    });\r",
											"            }\r",
											"durationTest();\r",
											"\r",
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"\r",
											"headerTest()\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/Duration?lang=ar-AE",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"Duration"
									],
									"query": [
										{
											"key": "lang",
											"value": "ar-AE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var entity_type0 = \"Tenant\"\r",
											"var entity_type1 = \"Government Entity\"\r",
											"var entity_type2 = \"Truck Driver\"\r",
											"var entity_type3 = \"Visitor\"\r",
											"\r",
											"var categoryTest=()=>{\r",
											"    pm.test(\"Json response body contains Tenants\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(entity_type0); \r",
											"    });\r",
											"            pm.test(\"Json response body contains Government Entity\", function () {\r",
											"                pm.expect(pm.response.text()).to.include(entity_type1); \r",
											"    });\r",
											"                pm.test(\"Json response body contains Truck Driver\", function () {\r",
											"                    pm.expect(pm.response.text()).to.include(entity_type2); \r",
											"    });\r",
											"                pm.test(\"Json response body contains Visitor\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(entity_type3); \r",
											"    });\r",
											"    }\r",
											"categoryTest()\r",
											"\r",
											"var commonTest=()=>{\r",
											"    pm.test(\"Response time is less than 3000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"            });\r",
											"    var size=0;\r",
											"        for (var count in responseBody) {\r",
											"            if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        }\r",
											"        console.log(\"BODY SIZE = \" + size);         \r",
											"                pm.test(\"response size\", function () {\r",
											"             pm.expect(pm.response.responseSize).to.be.equal(612);\r",
											"         });\r",
											"                pm.test(\"Status code is 200\", function () {\r",
											"            pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"    }\r",
											"commonTest()\r",
											"\r",
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"\r",
											"headerTest()\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})\r",
											"\r",
											"var active_environment = \"PCS_Iraq_QA\"\r",
											"\r",
											"var environmentTest=()=>{\r",
											"    pm.test(\"Check the active environment\", () => {\r",
											"        pm.expect(pm.environment.name).to.eql(PCS_Iraq_QA);\r",
											"            });\r",
											"            pm.test(\"Content-Type is application/json\", function () {\r",
											"        pm.response.to.have.header(\"Content-Type\"); \r",
											"    });\r",
											"\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/Category?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"Category"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Category Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var entity_type0 = \"مستأجر\"\r",
											"var entity_type1 = \"جهة حكومية\"\r",
											"var entity_type2 = \"سائق شاحنة\"\r",
											"var entity_type3 =  \"زائر\"\r",
											"\r",
											"var categoryTest=()=>{\r",
											"    pm.test(\"Json response body contains Tenants\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(entity_type0); \r",
											"    });\r",
											"            pm.test(\"Json response body contains Government Entity\", function () {\r",
											"                pm.expect(pm.response.text()).to.include(entity_type1); \r",
											"    });\r",
											"                pm.test(\"Json response body contains Truck Driver\", function () {\r",
											"                    pm.expect(pm.response.text()).to.include(entity_type2); \r",
											"    });\r",
											"                pm.test(\"Json response body contains Visitor\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(entity_type3); \r",
											"    });\r",
											"    }\r",
											"categoryTest()\r",
											"\r",
											"var commonTest=()=>{\r",
											"    pm.test(\"Response time is less than 3000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"            });\r",
											"    var size=0;\r",
											"        for (var count in responseBody) {\r",
											"            if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        }\r",
											"        console.log(\"BODY SIZE = \" + size);         \r",
											"                pm.test(\"response size\", function () {\r",
											"             pm.expect(pm.response.responseSize).to.be.equal(628);\r",
											"         });\r",
											"                pm.test(\"Status code is 200\", function () {\r",
											"            pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"    }\r",
											"commonTest()\r",
											"\r",
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"\r",
											"headerTest()\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})\r",
											"\r",
											"var active_environment = \"PCS_Iraq_QA\"\r",
											"\r",
											"var environmentTest=()=>{\r",
											"    pm.test(\"Check the active environment\", () => {\r",
											"        pm.expect(pm.environment.name).to.eql(PCS_Iraq_QA);\r",
											"            });\r",
											"            pm.test(\"Content-Type is application/json\", function () {\r",
											"        pm.response.to.have.header(\"Content-Type\"); \r",
											"    });\r",
											"\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/Category?lang=ar-AE",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"Category"
									],
									"query": [
										{
											"key": "lang",
											"value": "ar-AE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "IdentityType(Resident)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" var identityTypeTest=()=>{\r",
											"     pm.test(\"Json response body contains string\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(\"National ID Card\"); \r",
											"    });\r",
											"           \r",
											" }\r",
											" identityTypeTest()\r",
											"\r",
											"var commonTest=()=>{\r",
											"    pm.test(\"Response time is less than 2000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"    });\r",
											"        pm.test(\"Status code is 200\", function () {\r",
											"            pm.response.to.have.status(200);\r",
											"    });\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"    size +=1 ;\r",
											"    }\r",
											"         console.log(\"BODY SIZE = \" + size);\r",
											"            pm.test(\"response size\", function () {\r",
											"            pm.expect(pm.response.responseSize).to.be.equal(176);\r",
											"    });\r",
											"}\r",
											"commonTest()\r",
											"\r",
											"\r",
											"pm.test(\"Check the active environment\", () => {\r",
											"  pm.expect(pm.environment.name).to.eql(\"PCS_Iraq_QA\");\r",
											"\r",
											"});\r",
											"pm.test(\"Content-Type is application/json\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\"); });\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\"); \r",
											"\r",
											"});\r",
											"\r",
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"\r",
											"headerTest()\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/ResidentIDType?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"ResidentIDType"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "IdentityType(nonResident)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"id\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Visa\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"NonResidentIDType\"); \r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Passport\"); \r",
											"\r",
											"});\r",
											" pm.test(\"Response time is less than 500ms\", function () {\r",
											"\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"\r",
											"});\r",
											"\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"if(responseBody.hasOwnProperty(count))\r",
											"size +=1 ;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size);\r",
											"pm.test(\"response size\", function () {\r",
											"pm.expect(pm.response.responseSize).to.be.equal(291);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var  schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											" var json = pm.response.json()\r",
											"\r",
											"pm.test('schema is valid', function(){\r",
											"\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"\r",
											"\r",
											"\r",
											"})\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is application/json\", function () \r",
											"\r",
											"    {pm.response.to.have.header(\"Content-Type\"); });\r",
											"\r",
											"\r",
											"   pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"true\"); \r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/NonResidentIDType?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"NonResidentIDType"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "IdentityType Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" var identityTypeTest=()=>{\r",
											"     pm.test(\"Json response body contains string\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(\"بطاقة الهوية الوطنية\"); \r",
											"    });\r",
											"           \r",
											" }\r",
											" identityTypeTest()\r",
											"\r",
											"var commonTest=()=>{\r",
											"    pm.test(\"Response time is less than 2000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"    });\r",
											"        pm.test(\"Status code is 200\", function () {\r",
											"            pm.response.to.have.status(200);\r",
											"    });\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"    size +=1 ;\r",
											"    }\r",
											"         console.log(\"BODY SIZE = \" + size);\r",
											"            pm.test(\"response size\", function () {\r",
											"            pm.expect(pm.response.responseSize).to.be.equal(198);\r",
											"    });\r",
											"}\r",
											"commonTest()\r",
											"\r",
											"\r",
											"pm.test(\"Check the active environment\", () => {\r",
											"  pm.expect(pm.environment.name).to.eql(\"PCS_Iraq_QA\");\r",
											"\r",
											"});\r",
											"pm.test(\"Content-Type is application/json\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\"); });\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\"); \r",
											"\r",
											"});\r",
											"\r",
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"\r",
											"headerTest()\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/ResidentIDType?lang=ar-AE",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"ResidentIDType"
									],
									"query": [
										{
											"key": "lang",
											"value": "ar-AE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "IdentityType(nonResident) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"id\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"تأشيرة دخول\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"NonResidentIDType\"); \r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"جواز سفر\"); \r",
											"\r",
											"});\r",
											" pm.test(\"Response time is less than 500ms\", function () {\r",
											"\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"\r",
											"});\r",
											"\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"if(responseBody.hasOwnProperty(count))\r",
											"size +=1 ;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size);\r",
											"pm.test(\"response size\", function () {\r",
											"pm.expect(pm.response.responseSize).to.be.equal(315);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var  schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											" var json = pm.response.json()\r",
											"\r",
											"pm.test('schema is valid', function(){\r",
											"\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"\r",
											"\r",
											"\r",
											"})\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is application/json\", function () \r",
											"\r",
											"    {pm.response.to.have.header(\"Content-Type\"); });\r",
											"\r",
											"\r",
											"   pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"true\"); \r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/NonResidentIDType?lang=ar-AE",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"NonResidentIDType"
									],
									"query": [
										{
											"key": "lang",
											"value": "ar-AE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Gender ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"id\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Female\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Gender\"); \r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Male\"); \r",
											"\r",
											"});\r",
											" pm.test(\"Response time is less than 500ms\", function () {\r",
											"\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"\r",
											"});\r",
											"\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"if(responseBody.hasOwnProperty(count))\r",
											"size +=1 ;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size);\r",
											"pm.test(\"response size\", function () {\r",
											"pm.expect(pm.response.responseSize).to.be.equal(256);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var  schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											" var json = pm.response.json()\r",
											"\r",
											"pm.test('schema is valid', function(){\r",
											"\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"\r",
											"\r",
											"\r",
											"})\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is application/json\", function () \r",
											"\r",
											"    {pm.response.to.have.header(\"Content-Type\"); });\r",
											"\r",
											"\r",
											"   pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"true\"); \r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/Gender?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"Gender"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Gender  Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"id\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"أنثى\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Gender\"); \r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"ذكر\"); \r",
											"\r",
											"});\r",
											" pm.test(\"Response time is less than 500ms\", function () {\r",
											"\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"\r",
											"});\r",
											"\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"if(responseBody.hasOwnProperty(count))\r",
											"size +=1 ;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size);\r",
											"pm.test(\"response size\", function () {\r",
											"pm.expect(pm.response.responseSize).to.be.equal(260);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var  schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											" var json = pm.response.json()\r",
											"\r",
											"pm.test('schema is valid', function(){\r",
											"\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"\r",
											"\r",
											"\r",
											"})\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is application/json\", function () \r",
											"\r",
											"    {pm.response.to.have.header(\"Content-Type\"); });\r",
											"\r",
											"\r",
											"   pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"true\"); \r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/Gender?lang=ar-AE",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"Gender"
									],
									"query": [
										{
											"key": "lang",
											"value": "ar-AE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Passtype",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var commonTest2=()=>{\r",
											"    pm.test(\"Json response body contains long term passtype\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(\"Long Term\"); \r",
											"        pm.expect(pm.response.text()).to.include(365)\r",
											"        });\r",
											"            pm.test(\"Body contains short term passtype\",() => {\r",
											"                pm.expect(pm.response.text()).to.include(\"Short Term\");\r",
											"                    pm.expect(pm.response.text()).to.include(90)\r",
											"                    });\r",
											"                         pm.test(\"Body contains daily passtype\", function () {\r",
											"                pm.expect(pm.response.text()).to.include(\"Daily\"); \r",
											"            pm.expect(pm.response.text()).to.include(1)\r",
											"        });\r",
											"}\r",
											"commonTest2()\r",
											"\r",
											"var responseTest=()=>{\r",
											"    pm.test(\"Verify status code should be 200\", function () {\r",
											"        pm.response.to.be.not.eql(null);\r",
											"        pm.response.to.have.status(200);\r",
											"    });     pm.test(\"Response time is less than 5000ms\", function () {\r",
											"                pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"    });             pm.test(\"Body contains status success\",() => {\r",
											"                        pm.expect(pm.response.text()).to.include(\"true\");\r",
											"                            });\r",
											"                    pm.test(\"Body contains total Item Count&Pagenumber\", function () {\r",
											"                        pm.expect(pm.response.text()).to.include(6); \r",
											"            pm.expect(pm.response.text()).to.include(1)\r",
											"    });\r",
											"    }\r",
											"\r",
											"responseTest()\r",
											"\r",
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"\r",
											"headerTest()\r",
											"\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"    if(responseBody.hasOwnProperty(count))\r",
											"        size += 1;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size); \r",
											"pm.test(\"response size\", function () {\r",
											"    pm.expect(pm.response.responseSize).to.be.equal(697);\r",
											"});\r",
											"var schema = {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"data\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"name\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"code\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationUnit\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationId\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"name\",\r",
											"                \"code\",\r",
											"                \"durationUnit\",\r",
											"                \"durationId\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"name\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"code\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationUnit\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationId\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"name\",\r",
											"                \"code\",\r",
											"                \"durationUnit\",\r",
											"                \"durationId\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"name\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"code\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationUnit\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationId\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"name\",\r",
											"                \"code\",\r",
											"                \"durationUnit\",\r",
											"                \"durationId\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"pageCount\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"totalItemCount\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageIndex\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageNumber\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageSize\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"hasPreviousPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"hasNextPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"isFirstPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"isLastPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"itemStart\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"itemEnd\": {\r",
											"          \"type\": \"integer\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"data\",\r",
											"        \"pageCount\",\r",
											"        \"totalItemCount\",\r",
											"        \"pageIndex\",\r",
											"        \"pageNumber\",\r",
											"        \"pageSize\",\r",
											"        \"hasPreviousPage\",\r",
											"        \"hasNextPage\",\r",
											"        \"isFirstPage\",\r",
											"        \"isLastPage\",\r",
											"        \"itemStart\",\r",
											"        \"itemEnd\"\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"\r",
											"})\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/passtype",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"passtype"
									]
								}
							},
							"response": []
						},
						{
							"name": "Passtype Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var commonTest2=()=>{\r",
											"    pm.test(\"Json response body contains long term passtype\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(\"طويل المدى\"); \r",
											"        pm.expect(pm.response.text()).to.include(365)\r",
											"        });\r",
											"            pm.test(\"Body contains short term passtype\",() => {\r",
											"                pm.expect(pm.response.text()).to.include(\"قصير المدى\");\r",
											"                    pm.expect(pm.response.text()).to.include(90)\r",
											"                    });\r",
											"                         pm.test(\"Body contains daily passtype\", function () {\r",
											"                pm.expect(pm.response.text()).to.include(\"يومي\"); \r",
											"            pm.expect(pm.response.text()).to.include(1)\r",
											"        });\r",
											"}\r",
											"commonTest2()\r",
											"\r",
											"var responseTest=()=>{\r",
											"    pm.test(\"Verify status code should be 200\", function () {\r",
											"        pm.response.to.be.not.eql(null);\r",
											"        pm.response.to.have.status(200);\r",
											"    });     pm.test(\"Response time is less than 5000ms\", function () {\r",
											"                pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"    });             pm.test(\"Body contains status success\",() => {\r",
											"                        pm.expect(pm.response.text()).to.include(\"true\");\r",
											"                            });\r",
											"                    pm.test(\"Body contains total Item Count&Pagenumber\", function () {\r",
											"                        pm.expect(pm.response.text()).to.include(6); \r",
											"            pm.expect(pm.response.text()).to.include(1)\r",
											"    });\r",
											"    }\r",
											"\r",
											"responseTest()\r",
											"\r",
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"\r",
											"headerTest()\r",
											"\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"    if(responseBody.hasOwnProperty(count))\r",
											"        size += 1;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size); \r",
											"pm.test(\"response size\", function () {\r",
											"    pm.expect(pm.response.responseSize).to.be.equal(719);\r",
											"});\r",
											"var schema = {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"data\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"name\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"code\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationUnit\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationId\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"name\",\r",
											"                \"code\",\r",
											"                \"durationUnit\",\r",
											"                \"durationId\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"name\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"code\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationUnit\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationId\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"name\",\r",
											"                \"code\",\r",
											"                \"durationUnit\",\r",
											"                \"durationId\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"name\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"code\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationUnit\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"durationId\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"name\",\r",
											"                \"code\",\r",
											"                \"durationUnit\",\r",
											"                \"durationId\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"pageCount\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"totalItemCount\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageIndex\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageNumber\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageSize\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"hasPreviousPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"hasNextPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"isFirstPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"isLastPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"itemStart\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"itemEnd\": {\r",
											"          \"type\": \"integer\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"data\",\r",
											"        \"pageCount\",\r",
											"        \"totalItemCount\",\r",
											"        \"pageIndex\",\r",
											"        \"pageNumber\",\r",
											"        \"pageSize\",\r",
											"        \"hasPreviousPage\",\r",
											"        \"hasNextPage\",\r",
											"        \"isFirstPage\",\r",
											"        \"isLastPage\",\r",
											"        \"itemStart\",\r",
											"        \"itemEnd\"\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"\r",
											"})\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/passtype?lang=ar-AE",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"passtype"
									],
									"query": [
										{
											"key": "lang",
											"value": "ar-AE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ApplicationRequestSummary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json response body contains id\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Long Term\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Short Term\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Daily\"); \r",
											"\r",
											"});\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"if(responseBody.hasOwnProperty(count))\r",
											"size +=1 ;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size);\r",
											";\r",
											"var schema =\r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"passType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"count\": {\r",
											"              \"type\": \"integer\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"passType\",\r",
											"            \"count\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"passType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"count\": {\r",
											"              \"type\": \"integer\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"passType\",\r",
											"            \"count\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"passType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"count\": {\r",
											"              \"type\": \"integer\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"passType\",\r",
											"            \"count\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes/ApplicationRequestSummary",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes",
										"ApplicationRequestSummary"
									]
								}
							},
							"response": []
						},
						{
							"name": "ApplicationStatusSummary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json response body contains id\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Approved\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Cancelled\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Draft\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Pending Payment\"); \r",
											"\r",
											"});\r",
											"// var size=0;\r",
											"// for (var count in responseBody) {\r",
											"// if(responseBody.hasOwnProperty(count))\r",
											"// size +=1 ;\r",
											"// }\r",
											"// console.log(\"BODY SIZE = \" + size);\r",
											"// pm.test(\"response size\", function () {\r",
											"// pm.expect(pm.response.responseSize).to.be.equal(197);\r",
											"// });\r",
											"var schema =\r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"passType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"count\": {\r",
											"              \"type\": \"integer\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"passType\",\r",
											"            \"count\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"passType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"count\": {\r",
											"              \"type\": \"integer\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"passType\",\r",
											"            \"count\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"passType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"count\": {\r",
											"              \"type\": \"integer\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"passType\",\r",
											"            \"count\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes/ApplicationStatusSummary",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes",
										"ApplicationStatusSummary"
									]
								}
							},
							"response": []
						},
						{
							"name": "IsResident_Attachment_True",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json response body contains id\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"NAID\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"OTHR\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"PHOT\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"National ID\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Other\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Photo\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"image/jpeg\" , \"image/png\",\"application/pdf\",\"application/msword\",\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"); \r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"\r",
											"});\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"if(responseBody.hasOwnProperty(count))\r",
											"size +=1 ;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size);\r",
											"pm.test(\"response size\", function () {\r",
											"pm.expect(pm.response.responseSize).to.be.equal(619);\r",
											"});\r",
											"var schema = \r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"label\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mimeTypes\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": [\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"size\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"unit\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"isMandatory\": {\r",
											"              \"type\": \"boolean\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"code\",\r",
											"            \"label\",\r",
											"            \"mimeTypes\",\r",
											"            \"size\",\r",
											"            \"unit\",\r",
											"            \"isMandatory\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"label\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mimeTypes\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": [\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"size\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"unit\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"isMandatory\": {\r",
											"              \"type\": \"boolean\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"code\",\r",
											"            \"label\",\r",
											"            \"mimeTypes\",\r",
											"            \"size\",\r",
											"            \"unit\",\r",
											"            \"isMandatory\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"label\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mimeTypes\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": [\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"size\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"unit\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"isMandatory\": {\r",
											"              \"type\": \"boolean\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"code\",\r",
											"            \"label\",\r",
											"            \"mimeTypes\",\r",
											"            \"size\",\r",
											"            \"unit\",\r",
											"            \"isMandatory\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"pass\": {\r\n    \"passTypeId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"categoryId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"entryDate\": \"2022-05-20T05:55:30.781Z\",\r\n    \"departureDate\": \"2022-05-20T05:55:30.781Z\",\r\n    \"entryReasonId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"passStatus\": \"string\"\r\n  },\r\n  \"passDetail\": {\r\n    \"isResident\": true,\r\n    \"identityTypeId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"identityNumber\": \"string\",\r\n    \"CountryCode\" : \"234\",\r\n    \"mobileNumber\": \"string\",\r\n    \"email\": \"string\",\r\n    \"fullName\": \"string\",\r\n    \"dob\": \"2022-05-20T05:55:30.781Z\",\r\n    \"genderId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"nationalityId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"profession\": \"string\",\r\n    \"applicantCompany\": \"string\",\r\n    \"address\": \"string\",\r\n    \"companyMobileNumber\": \"string\",\r\n    \"companyEmail\": \"string\",\r\n    \"visitedCountries\": [\r\n      \"string\"\r\n    ]\r\n  },\r\n  \"payment\": {\r\n    \"amount\": 0\r\n  },\r\n  \"locations\": [\r\n    {\r\n      \"portCode\": \"string\",\r\n      \"areaCode\": \"string\"\r\n    }\r\n  ],\r\n  \"passAttachments\": [\r\n    {\r\n      \"documentCode\": \"string\",\r\n      \"documentName\": \"string\",\r\n      \"mimeType\": \"string\",\r\n      \"content\": \"string\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Attachments",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Attachments"
									]
								}
							},
							"response": []
						},
						{
							"name": "IsResident_Attachment_False",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json response body contains id\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"PPVI\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"OTHR\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"PHOT\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Passport / UID\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Other\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"Photo\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"image/jpeg\" , \"image/png\",\"application/pdf\",\"application/msword\",\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"); \r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"\r",
											"});\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"if(responseBody.hasOwnProperty(count))\r",
											"size +=1 ;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size);\r",
											"pm.test(\"response size\", function () {\r",
											"pm.expect(pm.response.responseSize).to.be.equal(622);\r",
											"});\r",
											"var schema = \r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"label\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mimeTypes\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": [\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"size\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"unit\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"isMandatory\": {\r",
											"              \"type\": \"boolean\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"code\",\r",
											"            \"label\",\r",
											"            \"mimeTypes\",\r",
											"            \"size\",\r",
											"            \"unit\",\r",
											"            \"isMandatory\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"label\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mimeTypes\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": [\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"size\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"unit\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"isMandatory\": {\r",
											"              \"type\": \"boolean\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"code\",\r",
											"            \"label\",\r",
											"            \"mimeTypes\",\r",
											"            \"size\",\r",
											"            \"unit\",\r",
											"            \"isMandatory\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"label\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mimeTypes\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": [\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"size\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"unit\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"isMandatory\": {\r",
											"              \"type\": \"boolean\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"code\",\r",
											"            \"label\",\r",
											"            \"mimeTypes\",\r",
											"            \"size\",\r",
											"            \"unit\",\r",
											"            \"isMandatory\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"pass\": {\r\n    \"passTypeId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"categoryId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"entryDate\": \"2022-05-20T05:55:30.781Z\",\r\n    \"departureDate\": \"2022-05-20T05:55:30.781Z\",\r\n    \"entryReasonId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"passStatus\": \"string\"\r\n  },\r\n  \"passDetail\": {\r\n    \"isResident\": false,\r\n    \"identityTypeId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"identityNumber\": \"string\",\r\n    \"countrycode\" : \"\",\r\n    \"mobileNumber\": \"string\",\r\n    \"email\": \"string\",\r\n    \"fullName\": \"string\",\r\n    \"dob\": \"2022-05-20T05:55:30.781Z\",\r\n    \"genderId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"nationalityId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    \"profession\": \"string\",\r\n    \"applicantCompany\": \"string\",\r\n    \"address\": \"string\",\r\n    \"companyMobileNumber\": \"string\",\r\n    \"companyEmail\": \"string\",\r\n    \"visitedCountries\": [\r\n      \"string\"\r\n    ]\r\n  },\r\n  \"payment\": {\r\n    \"amount\": 0\r\n  },\r\n  \"locations\": [\r\n    {\r\n      \"portCode\": \"string\",\r\n      \"areaCode\": \"string\"\r\n    }\r\n  ],\r\n  \"passAttachments\": [\r\n    {\r\n      \"documentCode\": \"string\",\r\n      \"documentName\": \"string\",\r\n      \"mimeType\": \"string\",\r\n      \"content\": \"string\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Attachments",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Attachments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tariff LT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json response body contains id\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"tariffCode\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"LT\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"passTypeId\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"89188b5a-e901-4b7b-bba3-4ca45e72eedd\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"tariffAmount\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"200\"); \r",
											"});\r",
											"\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"if(responseBody.hasOwnProperty(count))\r",
											"size +=1 ;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size);\r",
											"pm.test(\"response size\", function () {\r",
											"pm.expect(pm.response.responseSize).to.be.equal(157);\r",
											"});\r",
											"var schema =\r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"tariffCode\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"passTypeId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"portCount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"tariffAmount\": {\r",
											"              \"type\": \"integer\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"tariffCode\",\r",
											"            \"passTypeId\",\r",
											"            \"portCount\",\r",
											"            \"tariffAmount\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"pass\": {\r\n    \"PassTypeId\": \"89188B5A-E901-4B7B-BBA3-4CA45E72EEDD\",\r\n    \"CategoryId\": \"a5a72cfc-341a-4bfe-9cc2-3f6ae89f1fb2\",\r\n    \"EntryDate\": \"2022-06-20T08:13:24.7Z\",\r\n    \"EntryReasonId\": \"EF8C764D-2FA2-407E-998B-D7ECA83EF13B\",\r\n    \"DepartureDate\": \"2022-06-20T08:13:24.7Z\",\r\n    \"PassStatus\": \"PNDPMT\"\r\n  },\r\n  \"passDetail\": {\r\n    \"IsResident\": true,\r\n    \"IdentityTypeId\": \"d3ef6fb8-dbcc-4d2e-a0f4-7b619db6b5d2\",\r\n    \"IdentityNumber\": \"BJUPA\",\r\n    \"CountryCode\": \"254\",\r\n    \"MobileNumber\": \"909099999\",\r\n    \"Email\": \"bingoooooooooooooooooooo@gail.com\",\r\n    \"FullName\": \"abcd\",\r\n    \"DOB\": \"2022-04-21T08:13:24.7Z\",\r\n    \"GenderId\": \"1a62346b-5ee6-401c-947b-bde9086286a5\",\r\n    \"NationalityId\": \"1c7845d0-7f7b-44b7-88e7-d9975cf04923\",\r\n    \"Profession\": \"string\",\r\n    \"ApplicantCompany\": \"string\",\r\n    \"Address\": \"string\",\r\n    \"CompanyMobileNumber\": \"ughu\",\r\n    \"CompanyEmail\": \".bingoooooooooooooooooooo@gail.com\",\r\n    \"VisitedCountries\": [\"1c7845d0-7f7b-44b7-88e7-d9975cf04923\"]\r\n  },\r\n  \"payment\": {\r\n      \"amount\":\"100.00\"\r\n  },\r\n  \"locations\": [\r\n    {\r\n      \"PortCode\": \"9A2EED93-7B59-405A-B962-896ABBD4A7D6\",\r\n      \"AreaCode\": \"A7E5047B-2C15-48D3-9CE3-47EF0461BD35\"\r\n    }\r\n  ],\r\n  \"passAttachments\": [\r\n    {\r\n      \"Id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n      \"DocumentCode\": \"NAID\",\r\n      \"DocumentName\": \"test.pdf\",\r\n      \"MimeType\": \"application/pdf\",\r\n      \"Content\": \"\",\r\n      \"DMSRefId\": \"string\",\r\n      \"IsDeleted\": true\r\n    }\r\n   \r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Tariff",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Tariff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Trariff ST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json response body contains id\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"tariffCode\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"ST\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"passTypeId\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"af2389b4-5513-408d-beb1-6de04eccfef7\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"tariffAmount\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"100\"); \r",
											"});\r",
											"\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"if(responseBody.hasOwnProperty(count))\r",
											"size +=1 ;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size);\r",
											"pm.test(\"response size\", function () {\r",
											"pm.expect(pm.response.responseSize).to.be.equal(157);\r",
											"});\r",
											"var schema =\r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"tariffCode\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"passTypeId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"portCount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"tariffAmount\": {\r",
											"              \"type\": \"integer\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"tariffCode\",\r",
											"            \"passTypeId\",\r",
											"            \"portCount\",\r",
											"            \"tariffAmount\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"pass\": {\r\n    \"PassTypeId\": \"AF2389B4-5513-408D-BEB1-6DE04ECCFEF7\",\r\n    \"CategoryId\": \"a5a72cfc-341a-4bfe-9cc2-3f6ae89f1fb2\",\r\n    \"EntryDate\": \"2022-06-20T08:13:24.7Z\",\r\n    \"EntryReasonId\": \"EF8C764D-2FA2-407E-998B-D7ECA83EF13B\",\r\n    \"DepartureDate\": \"2022-06-20T08:13:24.7Z\",\r\n    \"PassStatus\": \"PNDPMT\"\r\n  },\r\n  \"passDetail\": {\r\n    \"IsResident\": true,\r\n    \"IdentityTypeId\": \"d3ef6fb8-dbcc-4d2e-a0f4-7b619db6b5d2\",\r\n    \"IdentityNumber\": \"BJUPA\",\r\n    \"CountryCode\": \"254\",\r\n    \"MobileNumber\": \"909099999\",\r\n    \"Email\": \"bingoooooooooooooooooooo@gail.com\",\r\n    \"FullName\": \"abcd\",\r\n    \"DOB\": \"2022-04-21T08:13:24.7Z\",\r\n    \"GenderId\": \"1a62346b-5ee6-401c-947b-bde9086286a5\",\r\n    \"NationalityId\": \"1c7845d0-7f7b-44b7-88e7-d9975cf04923\",\r\n    \"Profession\": \"string\",\r\n    \"ApplicantCompany\": \"string\",\r\n    \"Address\": \"string\",\r\n    \"CompanyMobileNumber\": \"ughu\",\r\n    \"CompanyEmail\": \".bingoooooooooooooooooooo@gail.com\",\r\n    \"VisitedCountries\": [\"1c7845d0-7f7b-44b7-88e7-d9975cf04923\"]\r\n  },\r\n  \"payment\": {\r\n      \"amount\":\"100.00\"\r\n  },\r\n  \"locations\": [\r\n    {\r\n      \"PortCode\": \"9A2EED93-7B59-405A-B962-896ABBD4A7D6\",\r\n      \"AreaCode\": \"A7E5047B-2C15-48D3-9CE3-47EF0461BD35\"\r\n    }\r\n  ],\r\n  \"passAttachments\": [\r\n    {\r\n      \"Id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n      \"DocumentCode\": \"NAID\",\r\n      \"DocumentName\": \"test.pdf\",\r\n      \"MimeType\": \"application/pdf\",\r\n      \"Content\": \"\",\r\n      \"DMSRefId\": \"string\",\r\n      \"IsDeleted\": true\r\n    }\r\n   \r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Tariff",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Tariff"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tariff DLY",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json response body contains id\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"tariffCode\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"DLY\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"passTypeId\"); \r",
											"\r",
											"});\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"fd1ca40f-818b-4a2f-92a8-baec033f1396\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"tariffAmount\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains string\", function () {\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(\"20\"); \r",
											"});\r",
											"\r",
											"var size=0;\r",
											"for (var count in responseBody) {\r",
											"if(responseBody.hasOwnProperty(count))\r",
											"size +=1 ;\r",
											"}\r",
											"console.log(\"BODY SIZE = \" + size);\r",
											"pm.test(\"response size\", function () {\r",
											"pm.expect(pm.response.responseSize).to.be.equal(157);\r",
											"});\r",
											"var schema =\r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"tariffCode\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"passTypeId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"portCount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"tariffAmount\": {\r",
											"              \"type\": \"integer\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"tariffCode\",\r",
											"            \"passTypeId\",\r",
											"            \"portCount\",\r",
											"            \"tariffAmount\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"pass\": {\r\n    \"PassTypeId\": \"FD1CA40F-818B-4A2F-92A8-BAEC033F1396\",\r\n    \"CategoryId\": \"a5a72cfc-341a-4bfe-9cc2-3f6ae89f1fb2\",\r\n    \"EntryDate\": \"2022-06-20T08:13:24.7Z\",\r\n    \"EntryReasonId\": \"EF8C764D-2FA2-407E-998B-D7ECA83EF13B\",\r\n    \"DepartureDate\": \"2022-06-20T08:13:24.7Z\",\r\n    \"PassStatus\": \"PNDPMT\"\r\n  },\r\n  \"passDetail\": {\r\n    \"IsResident\": true,\r\n    \"IdentityTypeId\": \"d3ef6fb8-dbcc-4d2e-a0f4-7b619db6b5d2\",\r\n    \"IdentityNumber\": \"BJUPA\",\r\n    \"CountryCode\": \"254\",\r\n    \"MobileNumber\": \"909099999\",\r\n    \"Email\": \"bingoooooooooooooooooooo@gail.com\",\r\n    \"FullName\": \"abcd\",\r\n    \"DOB\": \"2022-04-21T08:13:24.7Z\",\r\n    \"GenderId\": \"1a62346b-5ee6-401c-947b-bde9086286a5\",\r\n    \"NationalityId\": \"1c7845d0-7f7b-44b7-88e7-d9975cf04923\",\r\n    \"Profession\": \"string\",\r\n    \"ApplicantCompany\": \"string\",\r\n    \"Address\": \"string\",\r\n    \"CompanyMobileNumber\": \"ughu\",\r\n    \"CompanyEmail\": \".bingoooooooooooooooooooo@gail.com\",\r\n    \"VisitedCountries\": [\"1c7845d0-7f7b-44b7-88e7-d9975cf04923\"]\r\n  },\r\n  \"payment\": {\r\n      \"amount\":\"100.00\"\r\n  },\r\n  \"locations\": [\r\n    {\r\n      \"PortCode\": \"9A2EED93-7B59-405A-B962-896ABBD4A7D6\",\r\n      \"AreaCode\": \"A7E5047B-2C15-48D3-9CE3-47EF0461BD35\"\r\n    }\r\n  ],\r\n  \"passAttachments\": [\r\n    {\r\n      \"Id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n      \"DocumentCode\": \"NAID\",\r\n      \"DocumentName\": \"test.pdf\",\r\n      \"MimeType\": \"application/pdf\",\r\n      \"Content\": \"\",\r\n      \"DMSRefId\": \"string\",\r\n      \"IsDeleted\": true\r\n    }\r\n   \r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Tariff",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Tariff"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Pass",
					"item": [
						{
							"name": "Get Passes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 800ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains passId for each pass\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"passId\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains passnumber\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"passNumber\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains total item count\",() => {\r",
											"    pm.expect(pm.response.text()).to.include(\"totalItemCount\");\r",
											"    });\r",
											"\r",
											"pm.test(\"Json response body contains total item\",() => {\r",
											"    pm.expect(pm.response.text()).to.include(\"totalItemCount\");\r",
											"});\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"data\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"passId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"identityType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"identityNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passTypeId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"applicantName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"entryDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"departureDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passStatusCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passStatus\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"category\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"categoryId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"ports\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"passId\",\r",
											"                \"passNumber\",\r",
											"                \"identityType\",\r",
											"                \"identityNumber\",\r",
											"                \"passTypeId\",\r",
											"                \"passType\",\r",
											"                \"createdBy\",\r",
											"                \"applicantName\",\r",
											"                \"createdDate\",\r",
											"                \"entryDate\",\r",
											"                \"departureDate\",\r",
											"                \"passStatusCode\",\r",
											"                \"passStatus\",\r",
											"                \"category\",\r",
											"                \"categoryId\",\r",
											"                \"ports\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"passId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"identityType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"identityNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passTypeId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"applicantName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"entryDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"departureDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passStatusCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passStatus\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"category\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"categoryId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"ports\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"passId\",\r",
											"                \"passNumber\",\r",
											"                \"identityType\",\r",
											"                \"identityNumber\",\r",
											"                \"passTypeId\",\r",
											"                \"passType\",\r",
											"                \"createdBy\",\r",
											"                \"applicantName\",\r",
											"                \"createdDate\",\r",
											"                \"entryDate\",\r",
											"                \"departureDate\",\r",
											"                \"passStatusCode\",\r",
											"                \"passStatus\",\r",
											"                \"category\",\r",
											"                \"categoryId\",\r",
											"                \"ports\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"passId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"identityType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"identityNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passTypeId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"applicantName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"entryDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"departureDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passStatusCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passStatus\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"category\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"categoryId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"ports\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"passId\",\r",
											"                \"passNumber\",\r",
											"                \"identityType\",\r",
											"                \"identityNumber\",\r",
											"                \"passTypeId\",\r",
											"                \"passType\",\r",
											"                \"createdBy\",\r",
											"                \"applicantName\",\r",
											"                \"createdDate\",\r",
											"                \"entryDate\",\r",
											"                \"departureDate\",\r",
											"                \"passStatusCode\",\r",
											"                \"passStatus\",\r",
											"                \"category\",\r",
											"                \"categoryId\",\r",
											"                \"ports\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"passId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"identityType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"identityNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passTypeId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"applicantName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"entryDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"departureDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passStatusCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passStatus\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"category\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"categoryId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"ports\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"passId\",\r",
											"                \"passNumber\",\r",
											"                \"identityType\",\r",
											"                \"identityNumber\",\r",
											"                \"passTypeId\",\r",
											"                \"passType\",\r",
											"                \"createdBy\",\r",
											"                \"applicantName\",\r",
											"                \"createdDate\",\r",
											"                \"entryDate\",\r",
											"                \"departureDate\",\r",
											"                \"passStatusCode\",\r",
											"                \"passStatus\",\r",
											"                \"category\",\r",
											"                \"categoryId\",\r",
											"                \"ports\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"passId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"identityType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"identityNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passTypeId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"applicantName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"entryDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"departureDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passStatusCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passStatus\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"category\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"categoryId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"ports\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"passId\",\r",
											"                \"passNumber\",\r",
											"                \"identityType\",\r",
											"                \"identityNumber\",\r",
											"                \"passTypeId\",\r",
											"                \"passType\",\r",
											"                \"createdBy\",\r",
											"                \"applicantName\",\r",
											"                \"createdDate\",\r",
											"                \"entryDate\",\r",
											"                \"departureDate\",\r",
											"                \"passStatusCode\",\r",
											"                \"passStatus\",\r",
											"                \"category\",\r",
											"                \"categoryId\",\r",
											"                \"ports\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"pageCount\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"totalItemCount\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageIndex\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageNumber\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageSize\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"hasPreviousPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"hasNextPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"isFirstPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"isLastPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"itemStart\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"itemEnd\": {\r",
											"          \"type\": \"integer\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"data\",\r",
											"        \"pageCount\",\r",
											"        \"totalItemCount\",\r",
											"        \"pageIndex\",\r",
											"        \"pageNumber\",\r",
											"        \"pageSize\",\r",
											"        \"hasPreviousPage\",\r",
											"        \"hasNextPage\",\r",
											"        \"isFirstPage\",\r",
											"        \"isLastPage\",\r",
											"        \"itemStart\",\r",
											"        \"itemEnd\"\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "x-descriptor",
										"value": "{\"order\":{\"orderBy\":\"\",\"orderType\":\"desc\"},\"filter\":[],\"pagination\":{\"pageSize\":5,\"pageIndex\":1}}",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes"
									],
									"query": [
										{
											"key": "passTypeId",
											"value": "89188b5a-e901-4b7b-bba3-4ca45e72eedd",
											"disabled": true
										},
										{
											"key": "passType",
											"value": "Short term",
											"disabled": true
										},
										{
											"key": "pagination",
											"value": "{\"pageSize\": 10,\"pageIndex\": 1}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Passes by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 800ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains Pass id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains Pass Detail\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"passDetail\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains pass Payment\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"passPayment\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains location\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"locations\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains pass Attachment\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"passAttachments\"); \r",
											"});\r",
											"\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"passNumber\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"passTypeId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"categoryId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"entryDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"departureDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"entryReasonId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"passStatus\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"passDetail\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"passId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"isResident\": {\r",
											"              \"type\": \"boolean\"\r",
											"            },\r",
											"            \"identityTypeId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"identityNumber\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"countryCode\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mobileNumber\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"email\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"fullName\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"dob\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"genderId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"nationalityId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"profession\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"applicantCompany\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"address\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"companyMobileNumber\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"companyEmail\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"visitedCountries\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": [\r",
											"                {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"passId\",\r",
											"            \"isResident\",\r",
											"            \"identityTypeId\",\r",
											"            \"identityNumber\",\r",
											"            \"countryCode\",\r",
											"            \"mobileNumber\",\r",
											"            \"email\",\r",
											"            \"fullName\",\r",
											"            \"dob\",\r",
											"            \"genderId\",\r",
											"            \"nationalityId\",\r",
											"            \"profession\",\r",
											"            \"applicantCompany\",\r",
											"            \"address\",\r",
											"            \"companyMobileNumber\",\r",
											"            \"companyEmail\",\r",
											"            \"visitedCountries\"\r",
											"          ]\r",
											"        },\r",
											"        \"passPayment\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"passId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"passId\",\r",
											"            \"amount\"\r",
											"          ]\r",
											"        },\r",
											"        \"locations\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"areaCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"passId\",\r",
											"                \"portCode\",\r",
											"                \"areaCode\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"passAttachments\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"passId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"documentCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"documentName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"mimeType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"dmsRefId\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"passId\",\r",
											"                \"documentCode\",\r",
											"                \"documentName\",\r",
											"                \"mimeType\",\r",
											"                \"dmsRefId\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"passNumber\",\r",
											"        \"passTypeId\",\r",
											"        \"categoryId\",\r",
											"        \"entryDate\",\r",
											"        \"departureDate\",\r",
											"        \"entryReasonId\",\r",
											"        \"passStatus\",\r",
											"        \"passDetail\",\r",
											"        \"passPayment\",\r",
											"        \"locations\",\r",
											"        \"passAttachments\"\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes/bce31e63-d747-43d7-94cd-6241ed5568c8?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes",
										"bce31e63-d747-43d7-94cd-6241ed5568c8"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Pass",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 800ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(8000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains id for each Passtype\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains success\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains passnumber\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"passNumber\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains Pass TypeId\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"passTypeId\"); \r",
											"});\r",
											"\r",
											"\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"passNumber\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"passTypeId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"categoryId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"entryDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"departureDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"entryReasonId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"passStatus\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"passNumber\",\r",
											"        \"passTypeId\",\r",
											"        \"categoryId\",\r",
											"        \"entryDate\",\r",
											"        \"departureDate\",\r",
											"        \"entryReasonId\",\r",
											"        \"passStatus\"\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"pass\": {\r\n    \"PassTypeId\": \"af2389b4-5513-408d-beb1-6de04eccfef7\",\r\n    \"CategoryId\": \"a5a72cfc-341a-4bfe-9cc2-3f6ae89f1fb2\",\r\n    \"EntryDate\": \"2023-06-20T08:13:24.7Z\",\r\n    \"EntryReasonId\": \"EF8C764D-2FA2-407E-998B-D7ECA83EF13B\",\r\n    \"DepartureDate\": \"2023-08-20T08:13:24.7Z\",\r\n    \"PassStatus\": \"PNDPMT\"\r\n  },\r\n  \"passDetail\": {\r\n    \"IsResident\": true,\r\n    \"IdentityTypeId\": \"d3ef6fb8-dbcc-4d2e-a0f4-7b619db6b5d2\",\r\n    \"IdentityNumber\": \"P67876\",\r\n    \"CountryCode\": \"91\",\r\n    \"MobileNumber\": \"909099999\",\r\n    \"Email\": \"string@gail.com\",\r\n    \"FullName\": \"abcd\",\r\n    \"DOB\": \"1994-04-21T08:13:24.7Z\",\r\n    \"GenderId\": \"1a62346b-5ee6-401c-947b-bde9086286a5\",\r\n    \"NationalityId\": \"1c7845d0-7f7b-44b7-88e7-d9975cf04923\",\r\n    \"Profession\": \"profession\",\r\n    \"ApplicantCompany\": \"adp port\",\r\n    \"Address\": \"address 1\",\r\n    \"CompanyMobileNumber\": \"8989176661\",\r\n    \"CompanyEmail\": \"test@gmail.com\",\r\n    \"VisitedCountries\": [\"ca227f8f-b06b-4752-8220-0c4c5809c693\"]\r\n  },\r\n  \"payment\": {\r\n      \"amount\":\"100.00\"\r\n  },\r\n  \"locations\": [\r\n    {\r\n      \"PortCode\": \"9A2EED93-7B59-405A-B962-896ABBD4A7D6\",\r\n      \"AreaCode\": \"A7E5047B-2C15-48D3-9CE3-47EF0461BD35\"\r\n    }\r\n  ],\r\n  \"passAttachments\": [\r\n    {\r\n      \"Id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n      \"DocumentCode\": \"NAID\",\r\n      \"DocumentName\": \"test.pdf\",\r\n      \"MimeType\": \"application/pdf\",\r\n      \"Content\": \"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VHlwZS9SZXNvdXJjZVJlZiMiCiAgICAgICAgICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICAgICAgICAgIHhtbG5zOmlsbHVzdHJhdG9yPSJodHRwOi8vbnMuYWRvYmUuY29tL2lsbHVzdHJhdG9yLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnBkZj0iaHR0cDovL25zLmFkb2JlLmNvbS9wZGYvMS4zLyIKICAgICAgICAgICAgeG1sbnM6eG1wVFBnPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvdC9wZy8iCiAgICAgICAgICAgIHhtbG5zOnN0RGltPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvRGltZW5zaW9ucyMiCiAgICAgICAgICAgIHhtbG5zOnN0Rm50PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvRm9udCMiCiAgICAgICAgICAgIHhtbG5zOnhtcEc9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9nLyI+CiAgICAgICAgIDxkYzpmb3JtYXQ+YXBwbGljYXRpb24vcGRmPC9kYzpmb3JtYXQ+CiAgICAgICAgIDxkYzp0aXRsZT4KICAgICAgICAgICAgPHJkZjpBbHQ+CiAgICAgICAgICAgICAgIDxyZGY6bGkgeG1sOmxhbmc9IngtZGVmYXVsdCI+MjAyMTA3MDZfQVRMUF9QREZUZW1wbGF0ZV9FTkdfSEs8L3JkZjpsaT4KICAgICAgICAgICAgPC9yZGY6QWx0PgogICAgICAgICA8L2RjOnRpdGxlPgogICAgICAgICA8eG1wOk1ldGFkYXRhRGF0ZT4yMDIxLTA3LTA2VDA5OjEwOjQzKzAzOjAwPC94bXA6TWV0YWRhdGFEYXRlPgogICAgICAgICA8eG1wOk1vZGlmeURhdGU+MjAyMS0wNy0wNlQwOToxMDo0MyswMzowMDwveG1wOk1vZGlmeURhdGU+CiAgICAgICAgIDx4bXA6Q3JlYXRlRGF0ZT4yMDIxLTA3LTA2VDA5OjA5OjA2KzAzOjAwPC94bXA6Q3JlYXRlRGF0ZT4KICAgICAgICAgPHhtcDpDcmVhdG9yVG9vbD5BZG9iZSBJbGx1c3RyYXRvciAyNS4yIChNYWNpbnRvc2gpPC94bXA6Q3JlYXRvclRvb2w+CiAgICAgICAgIDx4bXBNTTpJbnN0YW5jZUlEPnV1aWQ6OWY3MzU3MmUtYjQ0MS1jOTQ4LWFhNzQtZjJkOTUwYWJjODhkPC94bXBNTTpJbnN0YW5jZUlEPgogICAgICAgICA8eG1wTU06RG9jdW1lbnRJRD54bXAuZGlkOjc3N2QwYzhkLWRiZTgtNDQ4NC04Y2MxLTZmODExNWE3Njk2OTwveG1wTU06RG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD51dWlkOjVEMjA4OTI0OTNCRkRCMTE5MTRBODU5MEQzMTUwOEM4PC94bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ+CiAgICAgICAgIDx4bXBNTTpSZW5kaXRpb25DbGFzcz5wcm9vZjpwZGY8L3htcE1NOlJlbmRpdGlvbkNsYXNzPgogICAgICAgICA8eG1wTU06RGVyaXZlZEZyb20gcmRmOnBhcnNlVHlwZT0iUmVzb3VyY2UiPgogICAgICAgICAgICA8c3RSZWY6aW5zdGFuY2VJRD51dWlkOmZmODBlMjE3LWZlNjMtZjE0Yi1iNGU2LTA5OTNhZWExYTExYjwvc3RSZWY6aW5zdGFuY2VJRD4KICAgICAgICAgICAgPHN0UmVmOmRvY3VtZW50SUQ+eG1wLmRpZDplNGZkZDVhMC1hY2Y1LTQ0YTEtYmIwMS03M2I2YTI3ZDdmOTk8L3N0UmVmOmRvY3VtZW50SUQ+CiAgICAgICAgICAgIDxzdFJlZjpvcmlnaW5hbERvY3VtZW50SUQ+dXVpZDo1RDIwODkyNDkzQkZEQjExOTE0QTg1OTBEMzE1MDhDODwvc3RSZWY6b3JpZ2luYWxEb2N1bWVudElEPgogICAgICAgICAgICA8c3RSZWY6cmVuZGl0aW9uQ2xhc3M+cHJvb2Y6cGRmPC9zdFJlZjpyZW5kaXRpb25DbGFzcz4KICAgICAgICAgPC94bXBNTTpEZXJpdmVkRnJvbT4KICAgICAgICAgPHhtcE1NOkhpc3Rvcnk+CiAgICAgICAgICAgIDxyZGY6U2VxPgogICAgICAgICAgICAgICA8cmRmOmxpIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OmFjdGlvbj5zYXZlZDwvc3RFdnQ6YWN0aW9uPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6aW5zdGFuY2VJRD54bXAuaWlkOjJlMDdmY2E5LWVmYWItNDc4MS1hMjI5LWY0YmMyNTc5ZmNhZDwvc3RFdnQ6aW5zdGFuY2VJRD4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OndoZW4+MjAyMS0wNC0wOFQxNjo1NzowNiswNDowMDwvc3RFdnQ6d2hlbj4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OnNvZnR3YXJlQWdlbnQ+QWRvYmUgSWxsdXN0cmF0b3IgMjUuMiAoTWFjaW50b3NoKTwvc3RFdnQ6c29mdHdhcmVBZ2VudD4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OmNoYW5nZWQ+Lzwvc3RFdnQ6Y2hhbmdlZD4KICAgICAgICAgICAgICAgPC9yZGY6bGk+CiAgICAgICAgICAgICAgIDxyZGY6bGkgcmRmOnBhcnNlVHlwZT0iUmVzb3VyY2UiPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6YWN0aW9uPnNhdmVkPC9zdEV2dDphY3Rpb24+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDppbnN0YW5jZUlEPnhtcC5paWQ6Nzc3ZDBjOGQtZGJlOC00NDg0LThjYzEtNmY4MTE1YTc2OTY5PC9zdEV2dDppbnN0YW5jZUlEPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6d2hlbj4yMDIxLTA3LTA2VDA5OjA5OjA2KzAzOjAwPC9zdEV2dDp3aGVuPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6c29mdHdhcmVBZ2VudD5BZG9iZSBJbGx1c3RyYXRvciAyNS4yIChNYWNpbnRvc2gpPC9zdEV2dDpzb2Z0d2FyZUFnZW50PgogICAgICAgICAgICAgICAgICA8c3RFdnQ6Y2hhbmdlZD4vPC9zdEV2dDpjaGFuZ2VkPgogICAgICAgICAgICAgICA8L3JkZjpsaT4KICAgICAgICAgICAgPC9yZGY6U2VxPgogICAgICAgICA8L3htcE1NOkhpc3Rvcnk+CiAgICAgICAgIDxpbGx1c3RyYXRvcjpTdGFydHVwUHJvZmlsZT5QcmludDwvaWxsdXN0cmF0b3I6U3RhcnR1cFByb2ZpbGU+CiAgICAgICAgIDxpbGx1c3RyYXRvcjpDcmVhdG9yU3ViVG9vbD5BZG9iZSBJbGx1c3RyYXRvcjwvaWxsdXN0cmF0b3I6Q3JlYXRvclN1YlRvb2w+CiAgICAgICAgIDxwZGY6UHJvZHVjZXI+QWRvYmUgUERGIGxpYnJhcnkgMTUuMDA8L3BkZjpQcm9kdWNlcj4KICAgICAgICAgPHhtcFRQZzpOUGFnZXM+MTwveG1wVFBnOk5QYWdlcz4KICAgICAgICAgPHhtcFRQZzpIYXNWaXNpYmxlVHJhbnNwYXJlbmN5PlRydWU8L3htcFRQZzpIYXNWaXNpYmxlVHJhbnNwYXJlbmN5PgogICAgICAgICA8eG1wVFBnOkhhc1Zpc2libGVPdmVycHJpbnQ+RmFsc2U8L3htcFRQZzpIYXNWaXNpYmxlT3ZlcnByaW50PgogICAgICAgICA8eG1wVFBnOk1heFBhZ2VTaXplIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgPHN0RGltOnc+NTk1LjI3NjAwMTwvc3REaW06dz4KICAgICAgICAgICAgPHN0RGltOmg+MTIyNS42Mzg5MjE8L3N0RGltOmg+CiAgICAgICAgICAgIDxzdERpbTp1bml0PlBpeGVsczwvc3REaW06dW5pdD4KICAgICAgICAgPC94bXBUUGc6TWF4UGFnZVNpemU+CiAgICAgICAgIDx4bXBUUGc6Rm9udHM+CiAgICAgICAgICAgIDxyZGY6QmFnPgogICAgICAgICAgICAgICA8cmRmOmxpIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgICAgICAgPHN0Rm50OmZvbnROYW1lPkFEUG9ydHNHcm91cC1SZWd1bGFyPC9zdEZudDpmb250TmFtZT4KICAgICAgICAgICAgICAgICAgPHN0Rm50OmZvbnRGYW1pbHk+QURQb3J0c0dyb3VwPC9zdEZudDpmb250RmFtaWx5PgogICAgICAgICAgICAgICAgICA8c3RGbnQ6Zm9udEZhY2U+UmVndWxhcjwvc3RGbnQ6Zm9udEZhY2U+CiAgICAgICAgICAgICAgICAgIDxzdEZudDpmb250VHlwZT5PcGVuIFR5cGU8L3N0Rm50OmZvbnRUeXBlPgogICAgICAgICAgICAgICAgICA8c3RGbnQ6dmVyc2lvblN0cmluZz5WZXJzaW9uIDEuMDAwO2hvdGNvbnYgMS4wLjEwOTttYWtlb3RmZXhlIDIuNS42NTU5Njwvc3RGbnQ6dmVyc2lvblN0cmluZz4KICAgICAgICAgICAgICAgICAgPHN0Rm50OmNvbXBvc2l0ZT5GYWxzZTwvc3RGbnQ6Y29tcG9zaXRlPgogICAgICAgICAgICAgICAgICA8c3RGbnQ6Zm9udEZpbGVOYW1lPkFEUG9ydHNHcm91cC1SZWd1bGFyLm90Zjwvc3RGbnQ6Zm9udEZpbGVOYW1lPgogICAgICAgICAgICAgICA8L3JkZjpsaT4KICAgICAgICAgICAgICAgPHJkZjpsaSByZGY6cGFyc2VUeXBlPSJSZXNvdXJjZSI+CiAgICAgICAgICAgICAgICAgIDxzdEZudDpmb250TmFtZT5BRFBvcnRzR3JvdXAtQm9sZDwvc3RGbnQ6Zm9udE5hbWU+CiAgICAgICAgICAgICAgICAgIDxzdEZudDpmb250RmFtaWx5PkFEUG9ydHNHcm91cDwvc3RGbnQ6Zm9udEZhbWlseT4KICAgICAgICAgICAgICAgICAgPHN0Rm50OmZvbnRGYWNlPkJvbGQ8L3N0Rm50OmZvbnRGYWNlPgogICAgICAgICAgICAgICAgICA8c3RGbnQ6Zm9udFR5cGU+T3BlbiBUeXBlPC9zdEZudDpmb250VHlwZT4KICAgICAgICAgICAgICAgICAgPHN0Rm50OnZlcnNpb25TdHJpbmc+VmVyc2lvbiAxLjAwMDtob3Rjb252IDEuMC4xMDk7bWFrZW90ZmV4ZSAyLjUuNjU1OTY8L3N0Rm50OnZlcnNpb25TdHJpbmc+CiAgICAgICAgICAgICAgICAgIDxzdEZudDpjb21wb3NpdGU+RmFsc2U8L3N0Rm50OmNvbXBvc2l0ZT4KICAgICAgICAgICAgICAgICAgPHN0Rm50OmZvbnRGaWxlTmFtZT5BRFBvcnRzR3JvdXAtQm9sZC5vdGY8L3N0Rm50OmZvbnRGaWxlTmFtZT4KICAgICAgICAgICAgICAgPC9yZGY6bGk+CiAgICAgICAgICAgIDwvcmRmOkJhZz4KICAgICAgICAgPC94bXBUUGc6Rm9udHM+CiAgICAgICAgIDx4bXBUUGc6UGxhdGVOYW1lcz4KICAgICAgICAgICAgPHJkZjpTZXE+CiAgICAgICAgICAgICAgIDxyZGY6bGk+Q3lhbjwvcmRmOmxpPgogICAgICAgICAgICAgICA8cmRmOmxpPk1hZ2VudGE8L3JkZjpsaT4KICAgICAgICAgICAgICAgPHJkZjpsaT5ZZWxsb3c8L3JkZjpsaT4KICAgICAgICAgICAgICAgPHJkZjpsaT5CbGFjazwvcmRmOmxpPgogICAgICAgICAgICAgICA8cmRmOmxpPlBBTlRPTkUgMjY0NSBDPC9yZGY6bGk+CiAgICAgICAgICAgICAgIDxyZGY6bGk+UEFOVE9ORSA1MzQgQzwvcmRmOmxpPgogICAgICAgICAgICAgICA8cmRmOmxpPlBBTlRPTkUgQ29vbCBHcmF5IDEwIEM8L3JkZjpsaT4KICAgICAgICAgICAgPC9yZGY6U2VxPgogICAgICAgICA8L3htcFRQZzpQbGF0ZU5hbWVzPgogICAgICAgICA8eG1wVFBnOlN3YXRjaEdyb3Vwcz4KICAgICAgICAgICAgPHJkZjpTZXE+CiAgICAgICAgICAgICAgIDxyZGY6bGkgcmRmOnBhcnNlVHlwZT0iUmVzb3VyY2UiPgogICAgICAgICAgICAgICAgICA8eG1wRzpncm91cE5hbWU+RGVmYXVsdCBTd2F0Y2ggR3JvdXA8L3htcEc6Z3JvdXBOYW1lPgogICAgICAgICAgICAgICAgICA8eG1wRzpncm91cFR5cGU+MDwveG1wRzpncm91cFR5cGU+CiAgICAgICAgICAgICAgICAgIDx4bXBHOkNvbG9yYW50cz4KICAgICAgICAgICAgICAgICAgICAgPHJkZjpTZXE+CiAgICAgICAgICAgICAgICAgICAgICAgIDxyZGY6bGkgcmRmOnBhcnNlVHlwZT0iUmVzb3VyY2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8eG1wRzpzd2F0Y2hOYW1lPlBBTlRPTkUgMjY0NSBDPC94bXBHOnN3YXRjaE5hbWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4bXBHOnR5cGU+U1BPVDwveG1wRzp0eXBlPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8eG1wRzp0aW50PjEwMC4wMDAwMDA8L3htcEc6dGludD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhtcEc6bW9kZT5MQUI8L3htcEc6bW9kZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhtcEc6TD42Ni4yNzQ0OTg8L3htcEc6TD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhtcEc6QT4yMDwveG1wRzpBPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8eG1wRzpCPi0zMjwveG1wRzpCPgogICAgICAgICAgICAgICAgICAgICAgICA8L3JkZjpsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPHJkZjpsaSByZGY6cGFyc2VUeXBlPSJSZXNvdXJjZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4bXBHOnN3YXRjaE5hbWU+UEFOVE9ORSA1MzQgQzwveG1wRzpzd2F0Y2hOYW1lPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8eG1wRzp0eXBlPlNQT1Q8L3htcEc6dHlwZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhtcEc6dGludD4xMDAuMDAwMDAwPC94bXBHOnRpbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4bXBHOm1vZGU+TEFCPC94bXBHOm1vZGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4bXBHOkw+MjEuOTYwODAwPC94bXBHOkw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4bXBHOkE+MjwveG1wRzpBPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8eG1wRzpCPi0yODwveG1wRzpCPgogICAgICAgICAgICAgICAgICAgICAgICA8L3JkZjpsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPHJkZjpsaSByZGY6cGFyc2VUeXBlPSJSZXNvdXJjZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4bXBHOnN3YXRjaE5hbWU+UEFOVE9ORSBDb29sIEdyYXkgMTAgQzwveG1wRzpzd2F0Y2hOYW1lPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8eG1wRzp0eXBlPlNQT1Q8L3htcEc6dHlwZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhtcEc6dGludD4xMDAuMDAwMDAwPC94bXBHOnRpbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4bXBHOm1vZGU+TEFCPC94bXBHOm1vZGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4bXBHOkw+NDIuNzQ1MDk4PC94bXBHOkw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4bXBHOkE+MDwveG1wRzpBPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8eG1wRzpCPi0zPC94bXBHOkI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcmRmOmxpPgogICAgICAgICAgICAgICAgICAgICA8L3JkZjpTZXE+CiAgICAgICAgICAgICAgICAgIDwveG1wRzpDb2xvcmFudHM+CiAgICAgICAgICAgICAgIDwvcmRmOmxpPgogICAgICAgICAgICA8L3JkZjpTZXE+CiAgICAgICAgIDwveG1wVFBnOlN3YXRjaEdyb3Vwcz4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+Cjw/eHBhY2tldCBlbmQ9InIiPz4NCmVuZHN0cmVhbQ1lbmRvYmoNMzAgMCBvYmoNPDwvQkJveFstMS44MzU2MiAzOTYuNzA1IDU5Ny43MzYgMTMxLjMyOV0vRmlsdGVyL0ZsYXRlRGVjb2RlL0dyb3VwIDU2IDAgUi9MZW5ndGggODAvTWF0cml4WzEuMCAwLjAgMC4wIDEuMCAwLjAgMC4wXS9SZXNvdXJjZXM8PC9Db2xvclNwYWNlPDwvQ1MwIDM5IDAgUj4+L0V4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cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICAgICAgICAgIHhtbG5zOnBkZj0iaHR0cDovL25zLmFkb2JlLmNvbS9wZGYvMS4zLyI+CiAgICAgICAgIDx4bXA6Q3JlYXRvclRvb2w+QWRvYmUgSW5EZXNpZ24gMTYuMSAoTWFjaW50b3NoKTwveG1wOkNyZWF0b3JUb29sPgogICAgICAgICA8eG1wOkNyZWF0ZURhdGU+MjAyMS0wNy0wNlQwOTo0NDozNSswMzowMDwveG1wOkNyZWF0ZURhdGU+CiAgICAgICAgIDx4bXA6TWV0YWRhdGFEYXRlPjIwMjEtMDgtMDVUMTE6MzE6NDErMDQ6MDA8L3htcDpNZXRhZGF0YURhdGU+CiAgICAgICAgIDx4bXA6TW9kaWZ5RGF0ZT4yMDIxLTA4LTA1VDExOjMxOjQxKzA0OjAwPC94bXA6TW9kaWZ5RGF0ZT4KICAgICAgICAgPHhtcE1NOkluc3RhbmNlSUQ+dXVpZDpkOTg2ZDk2ZS01ZWVmLTQ0ZTYtYjExNS05MzljMjVhYTBiNTI8L3htcE1NOkluc3RhbmNlSUQ+CiAgICAgICAgIDx4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ+eG1wLmRpZDowNjNiZWI4My05YzUwLTQ3YWItYjMyZC0wMTc2N2U2ZmQ5ZWY8L3htcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOkRvY3VtZW50SUQ+eG1wLmlkOjg4NTJmZGMyLTkxMmUtNDk5MS04Y2MzLWE0ODExNDI3MTI3NzwveG1wTU06RG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOlJlbmRpdGlvbkNsYXNzPnByb29mOnBkZjwveG1wTU06UmVuZGl0aW9uQ2xhc3M+CiAgICAgICAgIDx4bXBNTTpIaXN0b3J5PgogICAgICAgICAgICA8cmRmOlNlcT4KICAgICAgICAgICAgICAgPHJkZjpsaSByZGY6cGFyc2VUeXBlPSJSZXNvdXJjZSI+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDphY3Rpb24+Y29udmVydGVkPC9zdEV2dDphY3Rpb24+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDpwYXJhbWV0ZXJzPmZyb20gYXBwbGljYXRpb24veC1pbmRlc2lnbiB0byBhcHBsaWNhdGlvbi9wZGY8L3N0RXZ0OnBhcmFtZXRlcnM+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDpzb2Z0d2FyZUFnZW50PkFkb2JlIEluRGVzaWduIDE2LjEgKE1hY2ludG9zaCk8L3N0RXZ0OnNvZnR3YXJlQWdlbnQ+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDpjaGFuZ2VkPi88L3N0RXZ0OmNoYW5nZWQ+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDp3aGVuPjIwMjEtMDctMDZUMDk6NDQ6MzUrMDM6MDA8L3N0RXZ0OndoZW4+CiAgICAgICAgICAgICAgIDwvcmRmOmxpPgogICAgICAgICAgICA8L3JkZjpTZXE+CiAgICAgICAgIDwveG1wTU06SGlzdG9yeT4KICAgICAgICAgPHhtcE1NOkRlcml2ZWRGcm9tIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgPHN0UmVmOmluc3RhbmNlSUQ+eG1wLmlpZDowNjNiZWI4My05YzUwLTQ3YWItYjMyZC0wMTc2N2U2ZmQ5ZWY8L3N0UmVmOmluc3RhbmNlSUQ+CiAgICAgICAgICAgIDxzdFJlZjpkb2N1bWVudElEPnhtcC5kaWQ6MDYzYmViODMtOWM1MC00N2FiLWIzMmQtMDE3NjdlNmZkOWVmPC9zdFJlZjpkb2N1bWVudElEPgogICAgICAgICAgICA8c3RSZWY6b3JpZ2luYWxEb2N1bWVudElEPnhtcC5kaWQ6MDYzYmViODMtOWM1MC00N2FiLWIzMmQtMDE3NjdlNmZkOWVmPC9zdFJlZjpvcmlnaW5hbERvY3VtZW50SUQ+CiAgICAgICAgICAgIDxzdFJlZjpyZW5kaXRpb25DbGFzcz5kZWZhdWx0PC9zdFJlZjpyZW5kaXRpb25DbGFzcz4KICAgICAgICAgPC94bXBNTTpEZXJpdmVkRnJvbT4KICAgICAgICAgPGRjOmZvcm1hdD5hcHBsaWNhdGlvbi9wZGY8L2RjOmZvcm1hdD4KICAgICAgICAgPHBkZjpQcm9kdWNlcj5BZG9iZSBQREYgTGlicmFyeSAxNS4wPC9wZGY6UHJvZHVjZXI+CiAgICAgICAgIDxwZGY6VHJhcHBlZD5GYWxzZTwvcGRmOlRyYXBwZWQ+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz4NCmVuZHN0cmVhbQ1lbmRvYmoNNiAwIG9iag08PC9GaWx0ZXIvRmxhdGVEZWNvZGUvRmlyc3QgNS9MZW5ndGggNTAvTiAxL1R5cGUvT2JqU3RtPj5zdHJlYW0NCmjeMjRUMFCwsdF3zi/NK1Ew1PfOTCmONjQFCgbF6odUFqTqBySmpxbb2QEEGADm9QvaDQplbmRzdHJlYW0NZW5kb2JqDTcgMCBvYmoNPDwvRmlsdGVyL0ZsYXRlRGVjb2RlL0ZpcnN0IDUvTGVuZ3RoIDE0OS9OIDEvVHlwZS9PYmpTdG0+PnN0cmVhbQ0KaN5MzL0KgzAQAOBXuU2DYO402h9EKA1CoYJDxy7RHG2gJBLt0LfvIIXuHx8VgNA08hzZrC54bVZO9bHAgnCHNR6UKqsMywQxEZsKMT3ZMDJcvObFPTxQnRPc095Mzq9hed6FkH2w/9ceK6KSFGWotmuIwb4n/mWD7uDqxmjiB6jKUchbNPPMVnbmtXDbfgUYAMq4MLINCmVuZHN0cmVhbQ1lbmRvYmoNOCAwIG9iag08PC9EZWNvZGVQYXJtczw8L0NvbHVtbnMgNC9QcmVkaWN0b3IgMTI+Pi9GaWx0ZXIvRmxhdGVEZWNvZGUvSURbPERFM0ZBRTNEQUFFNTQ1MUQ4MkRBMDk1QUJDRDc5OTNDPjw2NUMyRTZCQkY1MEZDNjQwOUQ0NzI0OEE0QUE1REU4OD5dL0luZm8gMTIgMCBSL0xlbmd0aCA1NS9Sb290IDE0IDAgUi9TaXplIDEzL1R5cGUvWFJlZi9XWzEgMyAwXT4+c3RyZWFtDQpo3mJiAAImRjbHTCYGBsapIKIdRLQCCXZ7ICH0H0gw9IHEPjEx/lpkBeIygghmMAsgwADkJQckDQplbmRzdHJlYW0NZW5kb2JqDXN0YXJ0eHJlZg0KMTE2DQolJUVPRg0K\",\r\n      \"DMSRefId\": \"string\",\r\n      \"IsDeleted\": true\r\n    }\r\n   \r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Pass",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (postman.getEnvironmentVariable(\"PCS_Iraq_QA\")=='true'){\r",
											"   postman.skipRequest;\r",
											"}\r",
											"\r",
											"// pm.test(\"Status code is 200\", function () {\r",
											"//     pm.response.to.have.status(200);\r",
											"// });\r",
											"\r",
											"// pm.test(\"Response time is less than 5000ms\", function () {\r",
											"//     pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"// });\r",
											"\r",
											"// pm.test(\"Content-Type is present\", function () {\r",
											"//     pm.response.to.have.header(\"Content-Type\");\r",
											"// });\r",
											"\r",
											"// pm.test(\"Json response body contains Passnumber\", function () {\r",
											"//     pm.expect(pm.response.text()).to.include(\"passNumber\"); \r",
											"// });\r",
											"\r",
											"// pm.test(\"Json response body contains Pass id\", function () {\r",
											"//     pm.expect(pm.response.text()).to.include(\"id\"); \r",
											"// });\r",
											"\r",
											"// var schema={\r",
											"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"//   \"type\": \"object\",\r",
											"//   \"properties\": {\r",
											"//     \"data\": {\r",
											"//       \"type\": \"object\",\r",
											"//       \"properties\": {\r",
											"//         \"passNumber\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"passTypeId\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"categoryId\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"entryDate\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"entryReasonId\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"departureDate\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"passStatus\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"isActive\": {\r",
											"//           \"type\": \"boolean\"\r",
											"//         },\r",
											"//         \"passDetail\": {\r",
											"//           \"type\": \"null\"\r",
											"//         },\r",
											"//         \"passPayment\": {\r",
											"//           \"type\": \"null\"\r",
											"//         },\r",
											"//         \"passAttachments\": {\r",
											"//           \"type\": \"null\"\r",
											"//         },\r",
											"//         \"locations\": {\r",
											"//           \"type\": \"null\"\r",
											"//         },\r",
											"//         \"id\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"createdDate\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"createdBy\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"updatedDate\": {\r",
											"//           \"type\": \"string\"\r",
											"//         },\r",
											"//         \"updatedBy\": {\r",
											"//           \"type\": \"string\"\r",
											"//         }\r",
											"//       },\r",
											"//       \"required\": [\r",
											"//         \"passNumber\",\r",
											"//         \"passTypeId\",\r",
											"//         \"categoryId\",\r",
											"//         \"entryDate\",\r",
											"//         \"entryReasonId\",\r",
											"//         \"departureDate\",\r",
											"//         \"passStatus\",\r",
											"//         \"isActive\",\r",
											"//         \"passDetail\",\r",
											"//         \"passPayment\",\r",
											"//         \"passAttachments\",\r",
											"//         \"locations\",\r",
											"//         \"id\",\r",
											"//         \"createdDate\",\r",
											"//         \"createdBy\",\r",
											"//         \"updatedDate\",\r",
											"//         \"updatedBy\"\r",
											"//       ]\r",
											"//     },\r",
											"//     \"msg\": {\r",
											"//       \"type\": \"null\"\r",
											"//     },\r",
											"//     \"success\": {\r",
											"//       \"type\": \"boolean\"\r",
											"//     },\r",
											"//     \"errorlst\": {\r",
											"//       \"type\": \"null\"\r",
											"//     }\r",
											"//   },\r",
											"//   \"required\": [\r",
											"//     \"data\",\r",
											"//     \"msg\",\r",
											"//     \"success\",\r",
											"//     \"errorlst\"\r",
											"//   ]\r",
											"// }\r",
											"// var json = pm.response.json()\r",
											"// pm.test('schema is valid', function(){\r",
											"//     pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"// })\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes/bce31e63-d747-43d7-94cd-6241ed5568c8/cancel?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes",
										"bce31e63-d747-43d7-94cd-6241ed5568c8",
										"cancel"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass Type by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 800ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\"); \r",
											"});\r",
											"\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"code\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"durationUnit\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"durationId\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"name\",\r",
											"        \"code\",\r",
											"        \"durationUnit\",\r",
											"        \"durationId\"\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/PassType/89188b5a-e901-4b7b-bba3-4ca45e72eedd?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"PassType",
										"89188b5a-e901-4b7b-bba3-4ca45e72eedd"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 800ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Json response body contains code\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"code\"); \r",
											"});\r",
											"\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"code\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"code\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"code\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"code\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"description\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lookup_Type\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"code\",\r",
											"            \"description\",\r",
											"            \"lookup_Type\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Lookup/PassStatus?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Lookup",
										"PassStatus"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Download Attachment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var header_Test = () => {\r",
											"    pm.test(\"Check the Response header\", function () {\r",
											"        pm.response.to.have.header(\"Content-Type\")\r",
											"        pm.response.to.have.header(\"Content-Length\")\r",
											"        pm.response.to.have.header(\"Date\")\r",
											"    });\r",
											"}\r",
											"header_Test()\r",
											"\r",
											"pm.test(\"Response time is less than 5000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"passId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"passNumber\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"docRefId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"mimeType\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"content\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"documentName\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"passId\",\r",
											"        \"passNumber\",\r",
											"        \"docRefId\",\r",
											"        \"mimeType\",\r",
											"        \"content\",\r",
											"        \"documentName\"\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"DocumentCode\": \"NAID\",\r\n      \"DocumentName\": \"test.pdf\",\r\n      \"MimeType\": \"application/pdf\",\r\n      \"DMSRefId\":\"d12d6fdf-806f-45e7-a47d-eebca48e50df\",\r\n    \"passId\":\"25e80d8a-03fb-4bb8-83a6-5dbc6cac6ab4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes/DownloadAttachment?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes",
										"DownloadAttachment"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Pass as Draft",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 800ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"var header_Test = () => {\r",
											"    pm.test(\"Check the Response header\", function () {\r",
											"        pm.response.to.have.header(\"Content-Type\")\r",
											"        pm.response.to.have.header(\"Content-Length\")\r",
											"        pm.response.to.have.header(\"Date\")\r",
											"    });\r",
											"}\r",
											"header_Test()\r",
											"\r",
											"pm.test(\"Response time is less than 5000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"passNumber\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"passTypeId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"categoryId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"entryDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"departureDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"entryReasonId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"passStatus\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"passNumber\",\r",
											"        \"passTypeId\",\r",
											"        \"categoryId\",\r",
											"        \"entryDate\",\r",
											"        \"departureDate\",\r",
											"        \"entryReasonId\",\r",
											"        \"passStatus\"\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"pass\": {\r\n    \"PassTypeId\": \"af2389b4-5513-408d-beb1-6de04eccfef7\",\r\n    \"CategoryId\": \"a5a72cfc-341a-4bfe-9cc2-3f6ae89f1fb2\",\r\n    \"EntryDate\": \"2023-06-20T08:13:24.7Z\",\r\n    \"EntryReasonId\": \"EF8C764D-2FA2-407E-998B-D7ECA83EF13B\",\r\n    \"DepartureDate\": \"2023-08-20T08:13:24.7Z\",\r\n    \"PassStatus\": \"DRFT\"\r\n  },\r\n  \"passDetail\": {\r\n    \"IsResident\": true,\r\n    \"IdentityTypeId\": \"d3ef6fb8-dbcc-4d2e-a0f4-7b619db6b5d2\",\r\n    \"IdentityNumber\": \"P67876\",\r\n    \"CountryCode\": \"91\",\r\n    \"MobileNumber\": \"909099999\",\r\n    \"Email\": \"string@gail.com\",\r\n    \"FullName\": \"abcd\",\r\n    \"DOB\": \"1994-04-21T08:13:24.7Z\",\r\n    \"GenderId\": \"1a62346b-5ee6-401c-947b-bde9086286a5\",\r\n    \"NationalityId\": \"1c7845d0-7f7b-44b7-88e7-d9975cf04923\",\r\n    \"Profession\": \"profession\",\r\n    \"ApplicantCompany\": \"adp port\",\r\n    \"Address\": \"address 1\",\r\n    \"CompanyMobileNumber\": \"8989176661\",\r\n    \"CompanyEmail\": \"test@gmail.com\",\r\n    \"VisitedCountries\": [\"ca227f8f-b06b-4752-8220-0c4c5809c693\"]\r\n  },\r\n  \"payment\": {\r\n      \"amount\":\"100.00\"\r\n  },\r\n  \"locations\": [\r\n    {\r\n      \"PortCode\": \"9A2EED93-7B59-405A-B962-896ABBD4A7D6\",\r\n      \"AreaCode\": \"A7E5047B-2C15-48D3-9CE3-47EF0461BD35\"\r\n    }\r\n  ],\r\n  \"passAttachments\": [\r\n    {\r\n      \"DocumentCode\": \"NAID\",\r\n      \"DocumentName\": \"test.pdf\",\r\n      \"MimeType\": \"application/pdf\",\r\n      \"Content\": \"\",\r\n      \"DMSRefId\": \"string\",\r\n      \"IsDeleted\": true\r\n    }\r\n   \r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "PCS_SmartPass",
			"item": [
				{
					"name": "Token",
					"item": [
						{
							"name": "Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"const jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"const token_new = jsonData.data.token;\r",
											"\r",
											"postman.setEnvironmentVariable(\"token4\",token_new);\r",
											"console.log(token_new);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"// var token = pm.response.json().data.token;\r",
											"// postman.setEnvironmentVariable(\"token_GS\",token);\r",
											"\r",
											"// //check status code\r",
											"// pm.test(\"Status code is 200\", function () {\r",
											"//     pm.response.to.have.status(200);\r",
											"// });\r",
											"// //check response time is less than 2000 ms\r",
											"// pm.test(\"Response time is less than 2000ms\", function () {\r",
											"//     pm.expect(pm.response.responseTime).to.below(4000);\r",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userName\": \"testuser\",\r\n    \"password\": \"P@ssw0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{tokenURL}}/IdentityManagementAPI/API/login",
									"host": [
										"{{tokenURL}}"
									],
									"path": [
										"IdentityManagementAPI",
										"API",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get ePass Details",
					"item": [
						{
							"name": "EN - EpassInfo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response has user data\", function () {\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.custCompName);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.tokenNo);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.gender);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.genderID);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.passType);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.passTypeID);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.proposedEntryDate);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.proposedDepartureDate);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.category);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.categoryID);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.areaToVisit);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.entryReason);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.entryReasonID);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.status);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.statusID);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.idType);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.idNumber);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.nationality);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.nationalityID);\r",
											"    pm.expect(pm.response.json().data.data.personalData.fullName);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.passValid);\r",
											"});\r",
											"\r",
											"pm.test(\"Object is contained\", () => {\r",
											"  const expectedObject = {\r",
											"    \"success\": true,\r",
											"    \"errorlst\": null,\r",
											"    \"msg\": null\r",
											"   \r",
											"  };\r",
											"  pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
											"});\r",
											"\r",
											"var headerTest=()=>{\r",
											"pm.test(\"Response body has header Data\", function () {\r",
											"   pm.response.to.have.header(\"Date\");\r",
											"   pm.response.to.have.header(\"Content-Length\");\r",
											"   pm.response.to.be.header(\"Content-Type\");\r",
											"});\r",
											"}\r",
											"headerTest()\r",
											"\r",
											"var response_size = 72215\r",
											"var response_code = 200\r",
											"var response_time = 5000\r",
											"var commonTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        } \r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"        \r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"        pm.test(\"response size\", function () {\r",
											"        pm.expect(pm.response.responseSize).to.be.equal(response_size);\r",
											"    });\r",
											"}\r",
											"commonTest();\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token4}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"eIDCardEncryptedData\": null,\r\n    \"Type\": \"TOKEN\",\r\n    \"portGateData\": {\r\n      \"IsMainGate\": true,\r\n      \"PortId\": \"9A2EED93-7B59-405A-B962-896ABBD4A7D6\",\r\n      \"PortName\": \"Umm Qasr Port\",\r\n      \"latitude\": \"24.51995\",\r\n      \"GateCode\": \"UQ001\",\r\n      \"GateName\": \"Main Gate 1\",\r\n      \"IsZoneGate\": false,\r\n      \"longitude\": \"54.37717\"\r\n    },\r\n    \"companycode\": \"REG03953\",\r\n    \"Id\": \"22060002082\"\r\n  },\r\n  \"header\": {\r\n    \"devicetime\": \"2022-07-20 14:19:49\",\r\n    \"geolocation\": {\r\n      \"latitude\": 24.51995,\r\n      \"longitude\": 54.37717\r\n    },\r\n    \"deviceosversion\": \"15.5\",\r\n    \"devicetype\": \"ipad\",\r\n    \"requestid\": 1,\r\n    \"appbundleid\": \"ae.adports.maqtagateway.epass.qa\",\r\n    \"deviceos\": \"ios\",\r\n    \"appversion\": \"0.10\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes/EpassInfo?lang=en-US",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes",
										"EpassInfo"
									],
									"query": [
										{
											"key": "lang",
											"value": "en-US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AE - EpassInfo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//check status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"//check response time is less than 4000 ms\r",
											"pm.test(\"Response time is less than 4000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.below(6000);\r",
											"});\r",
											"//check the response user data\r",
											"pm.test(\"Response has user data\", function () {\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.custCompName);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.tokenNo);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.gender);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.genderID);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.passType);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.passTypeID);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.proposedEntryDate);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.proposedDepartureDate);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.category);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.categoryID);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.areaToVisit);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.entryReason);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.entryReasonID);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.status);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.statusID);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.idType);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.idNumber);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.nationality);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.nationalityID);\r",
											"    pm.expect(pm.response.json().data.data.personalData.fullName);\r",
											"    pm.expect(pm.response.json().data.data.ePassInfo.passValid);\r",
											"});\r",
											"\r",
											"pm.test(\"Object is contained\", () => {\r",
											"  const expectedObject = {\r",
											"    \"success\": true,\r",
											"    \"errorlst\": null,\r",
											"    \"msg\": null\r",
											"   \r",
											"  };\r",
											"  pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
											"});\r",
											"\r",
											"\r",
											"var schema = {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"header\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"requestid\": {\r",
											"              \"type\": \"null\"\r",
											"            },\r",
											"            \"apilogid\": {\r",
											"              \"type\": \"null\"\r",
											"            },\r",
											"            \"apiversion\": {\r",
											"              \"type\": \"null\"\r",
											"            },\r",
											"            \"serverinfo\": {\r",
											"              \"type\": \"null\"\r",
											"            },\r",
											"            \"servertime\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"servertimezone\": {\r",
											"              \"type\": \"null\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"requestid\",\r",
											"            \"apilogid\",\r",
											"            \"apiversion\",\r",
											"            \"serverinfo\",\r",
											"            \"servertime\",\r",
											"            \"servertimezone\"\r",
											"          ]\r",
											"        },\r",
											"        \"data\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"ePassInfo\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": [\r",
											"                {\r",
											"                  \"type\": \"object\",\r",
											"                  \"properties\": {\r",
											"                    \"custCompName\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"tokenNo\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"x_ID_Number\": {\r",
											"                      \"type\": \"null\"\r",
											"                    },\r",
											"                    \"x1_ID_Number\": {\r",
											"                      \"type\": \"null\"\r",
											"                    },\r",
											"                    \"fullName\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"gender\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"genderID\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"passType\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"passTypeID\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"proposedEntryDate\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"proposedDepartureDate\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"proposedEntryDateDisplay\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"proposedDepartureDateDisplay\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"category\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"categoryID\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"isTruckDriver\": {\r",
											"                      \"type\": \"boolean\"\r",
											"                    },\r",
											"                    \"areaToVisit\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"visitedAreas\": {\r",
											"                      \"type\": \"array\",\r",
											"                      \"items\": [\r",
											"                        {\r",
											"                          \"type\": \"string\"\r",
											"                        }\r",
											"                      ]\r",
											"                    },\r",
											"                    \"areaZone\": {\r",
											"                      \"type\": \"null\"\r",
											"                    },\r",
											"                    \"entryReason\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"entryReasonID\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"status\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"statusID\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"idType\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"idNumber\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"photo\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"nationality\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"nationalityID\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"paymentStatus\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"passValid\": {\r",
											"                      \"type\": \"boolean\"\r",
											"                    },\r",
											"                    \"portToVisit\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"vistedPorts\": {\r",
											"                      \"type\": \"array\",\r",
											"                      \"items\": [\r",
											"                        {\r",
											"                          \"type\": \"string\"\r",
											"                        }\r",
											"                      ]\r",
											"                    },\r",
											"                    \"isPermit\": {\r",
											"                      \"type\": \"null\"\r",
											"                    },\r",
											"                    \"ucid\": {\r",
											"                      \"type\": \"null\"\r",
											"                    },\r",
											"                    \"photographyCount\": {\r",
											"                      \"type\": \"null\"\r",
											"                    },\r",
											"                    \"materialCount\": {\r",
											"                      \"type\": \"null\"\r",
											"                    },\r",
											"                    \"equipmentCount\": {\r",
											"                      \"type\": \"null\"\r",
											"                    },\r",
											"                    \"iNOUTResponse\": {\r",
											"                      \"type\": \"object\",\r",
											"                      \"properties\": {\r",
											"                        \"isValidPass\": {\r",
											"                          \"type\": \"boolean\"\r",
											"                        },\r",
											"                        \"isIn\": {\r",
											"                          \"type\": \"boolean\"\r",
											"                        }\r",
											"                      },\r",
											"                      \"required\": [\r",
											"                        \"isValidPass\",\r",
											"                        \"isIn\"\r",
											"                      ]\r",
											"                    },\r",
											"                    \"email\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"address\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"createdDate\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"createdBy\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"updatedDate\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"updatedBy\": {\r",
											"                      \"type\": \"string\"\r",
											"                    }\r",
											"                  },\r",
											"                  \"required\": [\r",
											"                    \"custCompName\",\r",
											"                    \"tokenNo\",\r",
											"                    \"x_ID_Number\",\r",
											"                    \"x1_ID_Number\",\r",
											"                    \"fullName\",\r",
											"                    \"gender\",\r",
											"                    \"genderID\",\r",
											"                    \"passType\",\r",
											"                    \"passTypeID\",\r",
											"                    \"proposedEntryDate\",\r",
											"                    \"proposedDepartureDate\",\r",
											"                    \"proposedEntryDateDisplay\",\r",
											"                    \"proposedDepartureDateDisplay\",\r",
											"                    \"category\",\r",
											"                    \"categoryID\",\r",
											"                    \"isTruckDriver\",\r",
											"                    \"areaToVisit\",\r",
											"                    \"visitedAreas\",\r",
											"                    \"areaZone\",\r",
											"                    \"entryReason\",\r",
											"                    \"entryReasonID\",\r",
											"                    \"status\",\r",
											"                    \"statusID\",\r",
											"                    \"idType\",\r",
											"                    \"idNumber\",\r",
											"                    \"photo\",\r",
											"                    \"nationality\",\r",
											"                    \"nationalityID\",\r",
											"                    \"paymentStatus\",\r",
											"                    \"passValid\",\r",
											"                    \"portToVisit\",\r",
											"                    \"vistedPorts\",\r",
											"                    \"isPermit\",\r",
											"                    \"ucid\",\r",
											"                    \"photographyCount\",\r",
											"                    \"materialCount\",\r",
											"                    \"equipmentCount\",\r",
											"                    \"iNOUTResponse\",\r",
											"                    \"email\",\r",
											"                    \"address\",\r",
											"                    \"createdDate\",\r",
											"                    \"createdBy\",\r",
											"                    \"updatedDate\",\r",
											"                    \"updatedBy\"\r",
											"                  ]\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"personalData\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"nonMod\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"mod\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"signImage\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"photo\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"homeAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"workAddress\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"fullName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"idn\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"cardNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"title\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"nationality\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"issueDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"expiryDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"idType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"sex\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"doB\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"fullName_ar\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"maritalStatus\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"occupation\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"occupationField\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"title_ar\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"nationality_ar\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"motherName\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"motherName_ar\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"familyId\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"husbandIDN\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"sponsorType\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"sponsorName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"sponsorUnifiedNumber\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"residencyType\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"residencyNumber\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"residencyExpiryDate\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"photoBase64\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"signaturePhotoBase64\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"photoBase64Path\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"signaturePhotoBase64Path\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"isGenuine\": {\r",
											"                  \"type\": \"null\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"nonMod\",\r",
											"                \"mod\",\r",
											"                \"signImage\",\r",
											"                \"photo\",\r",
											"                \"homeAddress\",\r",
											"                \"workAddress\",\r",
											"                \"fullName\",\r",
											"                \"idn\",\r",
											"                \"cardNumber\",\r",
											"                \"title\",\r",
											"                \"nationality\",\r",
											"                \"issueDate\",\r",
											"                \"expiryDate\",\r",
											"                \"idType\",\r",
											"                \"sex\",\r",
											"                \"doB\",\r",
											"                \"fullName_ar\",\r",
											"                \"maritalStatus\",\r",
											"                \"occupation\",\r",
											"                \"occupationField\",\r",
											"                \"title_ar\",\r",
											"                \"nationality_ar\",\r",
											"                \"motherName\",\r",
											"                \"motherName_ar\",\r",
											"                \"familyId\",\r",
											"                \"husbandIDN\",\r",
											"                \"sponsorType\",\r",
											"                \"sponsorName\",\r",
											"                \"sponsorUnifiedNumber\",\r",
											"                \"residencyType\",\r",
											"                \"residencyNumber\",\r",
											"                \"residencyExpiryDate\",\r",
											"                \"photoBase64\",\r",
											"                \"signaturePhotoBase64\",\r",
											"                \"photoBase64Path\",\r",
											"                \"signaturePhotoBase64Path\",\r",
											"                \"isGenuine\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"ePassInfo\",\r",
											"            \"personalData\"\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"header\",\r",
											"        \"data\"\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"var json = pm.response.json()\r",
											"pm.test('schema is valid', function(){\r",
											"    pm.expect(tv4.validate(json, schema)).to.be.true; \r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token4}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"eIDCardEncryptedData\": null,\r\n    \"Type\": \"TOKEN\",\r\n    \"portGateData\": {\r\n      \"IsMainGate\": true,\r\n      \"PortId\": \"9A2EED93-7B59-405A-B962-896ABBD4A7D6\",\r\n      \"PortName\": \"Umm Qasr Port\",\r\n      \"latitude\": \"24.51995\",\r\n      \"GateCode\": \"UQ001\",\r\n      \"GateName\": \"Main Gate 1\",\r\n      \"IsZoneGate\": false,\r\n      \"longitude\": \"54.37717\"\r\n    },\r\n    \"companycode\": \"REG03953\",\r\n    \"Id\": \"22060002082\"\r\n  },\r\n  \"header\": {\r\n    \"devicetime\": \"2022-07-20 14:19:49\",\r\n    \"geolocation\": {\r\n      \"latitude\": 24.51995,\r\n      \"longitude\": 54.37717\r\n    },\r\n    \"deviceosversion\": \"15.5\",\r\n    \"devicetype\": \"ipad\",\r\n    \"requestid\": 1,\r\n    \"appbundleid\": \"ae.adports.maqtagateway.epass.qa\",\r\n    \"deviceos\": \"ios\",\r\n    \"appversion\": \"0.10\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes/EpassInfo?lang=ar-AE",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes",
										"EpassInfo"
									],
									"query": [
										{
											"key": "lang",
											"value": "ar-AE"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Record Gate IN/OUT",
					"item": [
						{
							"name": "GateMovement",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//check status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"//check response time is less than 4000 ms\r",
											"pm.test(\"Response time is less than 4000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.below(6000);\r",
											"});\r",
											"//check the response is success\r",
											"pm.test(\"Response is success\", function () {\r",
											"    pm.expect(pm.response.json().data);\r",
											"    pm.expect(pm.response.json().sucess);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token4}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":\r\n{\r\n  \"tokenNo\": \"22070002203\",\r\n  \"portID\": \"9A2EED93-7B59-405A-B962-896ABBD4A7D6\",\r\n  \"GateCode\": \"UQ001\",\r\n  \"isMainGate\": true,\r\n  \"isZoneGate\": false,\r\n  \"isGateIn\": true,\r\n  \"deviceTime\": \"2022-07-20T07:22:28.894Z\",\r\n  \"createdBy\": \"testuser\",\r\n  \"geoCoordinates\": {\r\n    \"latitude\": \"24.51995\",\r\n    \"longitude\": \"54.37717\"\r\n  }\r\n}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes/GateMovement",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes",
										"GateMovement"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Appointments",
					"item": [
						{
							"name": "All Appointments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response has appointment data\", function () {\r",
											"    pm.expect(pm.response.json().data.data.status);\r",
											"    pm.expect(pm.response.json().data.data.date);\r",
											"    pm.expect(pm.response.json().data.data.referenceNo);\r",
											"    pm.expect(pm.response.json().data.data.truckNumber);\r",
											"    pm.expect(pm.response.json().data.data.driverIdNumber);\r",
											"});\r",
											"\r",
											"var response_size = 4015\r",
											"var response_code = 200\r",
											"var response_time = 5000\r",
											"var commonTest=()=>{\r",
											"    var size=0;\r",
											"    for (var count in responseBody) {\r",
											"        if(responseBody.hasOwnProperty(count))\r",
											"            size += 1;\r",
											"        } \r",
											"        console.log(\"BODY SIZE = \" + size);\r",
											"        \r",
											"        pm.test(\"Verify status code should be 200\", function () {\r",
											"            pm.response.to.be.not.eql(null);\r",
											"            pm.response.to.have.status(response_code);\r",
											"        });\r",
											"             pm.test(\"Response time is less than 5000ms\", function () {\r",
											"        pm.expect(pm.response.responseTime).to.be.below(response_time);\r",
											"    });\r",
											"        pm.test(\"response size\", function () {\r",
											"        pm.expect(pm.response.responseSize).to.be.equal(response_size);\r",
											"    });\r",
											"}\r",
											"commonTest();\r",
											"\r",
											"\r",
											"var schema = {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"data\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"data\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"date\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"timeSlot\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"status\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"referenceNo\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"isActive\": {\r",
											"                  \"type\": \"boolean\"\r",
											"                },\r",
											"                \"driverName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"truckNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"updatedDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"date\",\r",
											"                \"timeSlot\",\r",
											"                \"status\",\r",
											"                \"referenceNo\",\r",
											"                \"isActive\",\r",
											"                \"driverName\",\r",
											"                \"driverIdNumber\",\r",
											"                \"driverIdType\",\r",
											"                \"truckNumber\",\r",
											"                \"updatedDate\",\r",
											"                \"createdDate\",\r",
											"                \"createdBy\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"date\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"timeSlot\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"status\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"referenceNo\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"isActive\": {\r",
											"                  \"type\": \"boolean\"\r",
											"                },\r",
											"                \"driverName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"truckNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"updatedDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"date\",\r",
											"                \"timeSlot\",\r",
											"                \"status\",\r",
											"                \"referenceNo\",\r",
											"                \"isActive\",\r",
											"                \"driverName\",\r",
											"                \"driverIdNumber\",\r",
											"                \"driverIdType\",\r",
											"                \"truckNumber\",\r",
											"                \"updatedDate\",\r",
											"                \"createdDate\",\r",
											"                \"createdBy\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"date\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"timeSlot\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"status\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"referenceNo\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"isActive\": {\r",
											"                  \"type\": \"boolean\"\r",
											"                },\r",
											"                \"driverName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"truckNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"updatedDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"date\",\r",
											"                \"timeSlot\",\r",
											"                \"status\",\r",
											"                \"referenceNo\",\r",
											"                \"isActive\",\r",
											"                \"driverName\",\r",
											"                \"driverIdNumber\",\r",
											"                \"driverIdType\",\r",
											"                \"truckNumber\",\r",
											"                \"updatedDate\",\r",
											"                \"createdDate\",\r",
											"                \"createdBy\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"date\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"timeSlot\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"status\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"referenceNo\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"isActive\": {\r",
											"                  \"type\": \"boolean\"\r",
											"                },\r",
											"                \"driverName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"truckNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"updatedDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"date\",\r",
											"                \"timeSlot\",\r",
											"                \"status\",\r",
											"                \"referenceNo\",\r",
											"                \"isActive\",\r",
											"                \"driverName\",\r",
											"                \"driverIdNumber\",\r",
											"                \"driverIdType\",\r",
											"                \"truckNumber\",\r",
											"                \"updatedDate\",\r",
											"                \"createdDate\",\r",
											"                \"createdBy\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"date\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"timeSlot\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"status\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"referenceNo\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"isActive\": {\r",
											"                  \"type\": \"boolean\"\r",
											"                },\r",
											"                \"driverName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"truckNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"updatedDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"date\",\r",
											"                \"timeSlot\",\r",
											"                \"status\",\r",
											"                \"referenceNo\",\r",
											"                \"isActive\",\r",
											"                \"driverName\",\r",
											"                \"driverIdNumber\",\r",
											"                \"driverIdType\",\r",
											"                \"truckNumber\",\r",
											"                \"updatedDate\",\r",
											"                \"createdDate\",\r",
											"                \"createdBy\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"date\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"timeSlot\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"status\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"referenceNo\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"isActive\": {\r",
											"                  \"type\": \"boolean\"\r",
											"                },\r",
											"                \"driverName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"truckNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"updatedDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"date\",\r",
											"                \"timeSlot\",\r",
											"                \"status\",\r",
											"                \"referenceNo\",\r",
											"                \"isActive\",\r",
											"                \"driverName\",\r",
											"                \"driverIdNumber\",\r",
											"                \"driverIdType\",\r",
											"                \"truckNumber\",\r",
											"                \"updatedDate\",\r",
											"                \"createdDate\",\r",
											"                \"createdBy\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"date\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"timeSlot\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"status\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"referenceNo\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"isActive\": {\r",
											"                  \"type\": \"boolean\"\r",
											"                },\r",
											"                \"driverName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"truckNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"updatedDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"date\",\r",
											"                \"timeSlot\",\r",
											"                \"status\",\r",
											"                \"referenceNo\",\r",
											"                \"isActive\",\r",
											"                \"driverName\",\r",
											"                \"driverIdNumber\",\r",
											"                \"driverIdType\",\r",
											"                \"truckNumber\",\r",
											"                \"updatedDate\",\r",
											"                \"createdDate\",\r",
											"                \"createdBy\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"date\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"timeSlot\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"status\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"referenceNo\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"isActive\": {\r",
											"                  \"type\": \"boolean\"\r",
											"                },\r",
											"                \"driverName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"truckNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"updatedDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"date\",\r",
											"                \"timeSlot\",\r",
											"                \"status\",\r",
											"                \"referenceNo\",\r",
											"                \"isActive\",\r",
											"                \"driverName\",\r",
											"                \"driverIdNumber\",\r",
											"                \"driverIdType\",\r",
											"                \"truckNumber\",\r",
											"                \"updatedDate\",\r",
											"                \"createdDate\",\r",
											"                \"createdBy\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"date\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"timeSlot\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"status\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"referenceNo\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"isActive\": {\r",
											"                  \"type\": \"boolean\"\r",
											"                },\r",
											"                \"driverName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"truckNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"updatedDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"date\",\r",
											"                \"timeSlot\",\r",
											"                \"status\",\r",
											"                \"referenceNo\",\r",
											"                \"isActive\",\r",
											"                \"driverName\",\r",
											"                \"driverIdNumber\",\r",
											"                \"driverIdType\",\r",
											"                \"truckNumber\",\r",
											"                \"updatedDate\",\r",
											"                \"createdDate\",\r",
											"                \"createdBy\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"date\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"timeSlot\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"status\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"referenceNo\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"isActive\": {\r",
											"                  \"type\": \"boolean\"\r",
											"                },\r",
											"                \"driverName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"driverIdType\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"truckNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"updatedDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"createdBy\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"date\",\r",
											"                \"timeSlot\",\r",
											"                \"status\",\r",
											"                \"referenceNo\",\r",
											"                \"isActive\",\r",
											"                \"driverName\",\r",
											"                \"driverIdNumber\",\r",
											"                \"driverIdType\",\r",
											"                \"truckNumber\",\r",
											"                \"updatedDate\",\r",
											"                \"createdDate\",\r",
											"                \"createdBy\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"pageCount\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"totalItemCount\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageIndex\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageNumber\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"pageSize\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"hasPreviousPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"hasNextPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"isFirstPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"isLastPage\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"itemStart\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"itemEnd\": {\r",
											"          \"type\": \"integer\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"data\",\r",
											"        \"pageCount\",\r",
											"        \"totalItemCount\",\r",
											"        \"pageIndex\",\r",
											"        \"pageNumber\",\r",
											"        \"pageSize\",\r",
											"        \"hasPreviousPage\",\r",
											"        \"hasNextPage\",\r",
											"        \"isFirstPage\",\r",
											"        \"isLastPage\",\r",
											"        \"itemStart\",\r",
											"        \"itemEnd\"\r",
											"      ]\r",
											"    },\r",
											"    \"msg\": {\r",
											"      \"type\": \"null\"\r",
											"    },\r",
											"    \"success\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"errorlst\": {\r",
											"      \"type\": \"null\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"data\",\r",
											"    \"msg\",\r",
											"    \"success\",\r",
											"    \"errorlst\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token4}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "x-descriptor",
										"value": "{ \"filter\": {\"operator\": \"and\", \"filters\": [{\"filterBy\": \"status\", \"filterType\": \"equal\", \"value\": \"APPROVED\"},{\"filterBy\": \"DriverIdNumber\", \"filterType\": \"equal\", \"value\": \"A1290123\"}]}, \"pagination\": {\"pageSize\": 10, \"PageIndex\": 1 }}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{qaurl}}/Appointment/api/v1/Appointment",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"Appointment",
										"api",
										"v1",
										"Appointment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Driver Appointment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//check status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"//check response time is less than 4000 ms\r",
											"pm.test(\"Response time is less than 4000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.below(6000);\r",
											"});\r",
											"//check the response appointment data\r",
											"pm.test(\"Response has appointment data\", function () {\r",
											"    pm.expect(pm.response.json().data.status);\r",
											"    pm.expect(pm.response.json().data.date);\r",
											"    pm.expect(pm.response.json().data.referenceNo);\r",
											"    pm.expect(pm.response.json().data.truckNumber);\r",
											"    pm.expect(pm.response.json().data.driverIdNumber);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token4}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "x-descriptor",
										"value": "{\"filter\": {\"filters\": [{\"filterBy\": \"DriverIdNumber\", \"filterType\": \"equal\", \"value\": \"Z2841672\"}]}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{qaurl}}/basegateway/apt/api/v1/appointment/driver/202219072022",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"basegateway",
										"apt",
										"api",
										"v1",
										"appointment",
										"driver",
										"202219072022"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Ports & Gates",
					"item": [
						{
							"name": "GetPortGates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//check status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"//check response time is less than 4000 ms\r",
											"pm.test(\"Response time is less than 4000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.below(6000);\r",
											"});\r",
											"//check the response user data\r",
											"pm.test(\"Response has user data\", function () {\r",
											"    pm.expect(pm.response.json().data.port.portID);\r",
											"    pm.expect(pm.response.json().data.port.portName);\r",
											"    pm.expect(pm.response.json().data.port.gates);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token4}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes/GetPortGates",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes",
										"GetPortGates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Find Location",
					"item": [
						{
							"name": "FindLocation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//check status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"//check response time is less than 4000 ms\r",
											"pm.test(\"Response time is less than 4000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.below(6000);\r",
											"});\r",
											"//check the response user data\r",
											"pm.test(\"Response has user data\", function () {\r",
											"    pm.expect(pm.response.json().data.gateCode);\r",
											"    pm.expect(pm.response.json().data.gateName);\r",
											"    pm.expect(pm.response.json().data.isMainGate);\r",
											"    pm.expect(pm.response.json().data.portID);\r",
											"    pm.expect(pm.response.json().data.portName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token4}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{qaurl}}/ePass/api/v1/Passes/FindLocation?latitude=24.51995&longitude=54.37717",
									"host": [
										"{{qaurl}}"
									],
									"path": [
										"ePass",
										"api",
										"v1",
										"Passes",
										"FindLocation"
									],
									"query": [
										{
											"key": "latitude",
											"value": "24.51995"
										},
										{
											"key": "longitude",
											"value": "54.37717"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImp0aSI6WyI1MGY5OWQyNi0zNWQ4LTRkN2MtOTI5OC05ZDRlNzdjOGQ5Y2MiLCIwNWFhY2Y0ZS1lMTk0LTQzZGUtODhlZS01ZGFmMTYxNGY2MmUiXSwiVVNFUkdST1VQIjoiQ2xlcmsiLCJGVUxMTkFNRSI6IlRlc3R1c2VyIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6InRlc3R1c2VyIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9leHBpcmVkIjoiNS85LzIwMjIgMjo1ODo0NiBQTSIsIk9SR0FOSVpBVElPTlVOSVRTIjoiIiwiT1JHQU5JWkFUSU9OUyI6IiIsIkVNQUlMIjoidGVzdHVzZXJAbWFxdGEuYWUiLCJleHAiOjE2NTIwOTM5MjYsImlzcyI6Ik1SLklkZW50aXR5LkFQSSIsImF1ZCI6Ik1SLlNlcnZpY2VzIn0.GhK3VHhynePjc8EG_rol9JhighwpCC6oIJKx61mGia4",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// console.log(\"Running pre request script from collection\")"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token_new",
			"value": ""
		}
	]
}